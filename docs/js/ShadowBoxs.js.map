{"version":3,"file":"ShadowBoxs.js","sourceRoot":"","sources":["ShadowBoxs.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"typings/index.d.ts\" />\n\nclass ShadowBoxs{\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n    private timer:number = 0;\n    private renderer:THREE.WebGLRenderer;\n    private objs:THREE.Mesh[] = [];\n    private  group:THREE.Group;\n    private rotations:THREE.Vector3[] = [];\n    private planeGeo:THREE.PlaneGeometry;\n    private noise:Object;\n    private time:number;\n    private pointLight:THREE.PointLight;\n    private pointLight2:THREE.PointLight;\n    private torusKnot:THREE.Mesh;\n\n    private objs:THREE.Group[] = [];\n    private  group:THREE.Group;\n    private rotations:THREE.Vector3[] = [];\n    private planeGeo:THREE.PlaneGeometry;\n    private noise:Object;\n    private timer:number;\n    private tetValues:Object[] = [];\n    private vec:THREE.Vector3[] = [];\n    private rotate:THREE.Vector3[] = [];\n    private limitDist:number = 60;\n\n    private pointLight01:THREE.PointLight;\n    private pointLight02:THREE.PointLight;\n\n    private isSlowDown:boolean = false;\n\n    private speed:number = 0.0;\n    constructor(renderer:THREE.WebGLRenderer) {\n\n        this.renderer = renderer;\n        this.createScene();\n\n    }\n\n    createLight( color:any ) {\n        var pointLight = new THREE.PointLight( color, 1, 60 );\n        pointLight.castShadow = true;\n        pointLight.shadow.camera.near = 1;\n        pointLight.shadow.camera.far = 40;\n        // pointLight.shadowCameraVisible = true;\n        pointLight.shadow.bias = 0.001;\n        var geometry = new THREE.SphereGeometry( 0.3, 12, 6 );\n        var material = new THREE.MeshBasicMaterial( { color: color } );\n        var sphere = new THREE.Mesh( geometry, material );\n        // pointLight.add( sphere );\n        return pointLight\n    }\n\n\n    // シーンを作る。ここでオブジェクトを格納していく。\n    private createScene(){\n        this.time = 0.0;\n        this.noise = new SimplexNoise();\n\n        // シーンを作る\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.FogExp2( 0x9400ff, 0.003 );\n        this.renderer.setClearColor(this.scene.fog.color);\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 );\n        this.camera.position.z = 10;\n        this.camera.position.y = 10;\n\n\n\n        // let spotLight = new THREE.SpotLight( 0xffffff,0.3 );\n        // spotLight.name = 'Spot Light';\n        // spotLight.angle = Math.PI / 5;\n        // spotLight.penumbra = 0.3;\n        // spotLight.position.set( 0, 200, 0 );\n        // spotLight.castShadow = true;\n        // spotLight.shadow.camera.near = 8;\n        // spotLight.shadow.camera.far = 100;\n        // spotLight.shadow.mapSize.width = 1024*2;\n        // spotLight.shadow.mapSize.height = 1024*2;\n        // this.scene.add( spotLight );\n        this.pointLight01 = this.createLight( 0xfaff6b );\n        this.pointLight01.position.set(30,30,0);\n        this.scene.add( this.pointLight01 );\n        // this.scene.add( pointLight2 );\n\n\n\n        this.pointLight02 = this.createLight( 0x6bf0ff );\n        this.pointLight02.position.set(-30,30,0);\n        this.scene.add( this.pointLight02 );\n        // let pointLight2 = this.createLight( 0xff0000 );\n        //\n        let dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        dirLight.name = 'Dir. Light';\n        dirLight.position.set( 0, 100, 0 );\n        // dirLight.castShadow = true;\n        // dirLight.shadow.camera.near = 1;\n        // dirLight.shadow.camera.far = 1000;\n        // dirLight.shadow.camera.right = 15;\n        // dirLight.shadow.camera.left = - 15;\n        // dirLight.shadow.camera.top\t= 15;\n        // dirLight.shadow.camera.bottom = - 15;\n        // dirLight.shadow.mapSize.width = 1024*2;\n        // dirLight.shadow.mapSize.height = 1024*2;\n        // this.scene.add( dirLight );\n\n        let ambLight = new THREE.AmbientLight(0xffffff,0.5);\n        this.scene.add(ambLight);\n\n\n\n        // var geometry = new THREE.BoxBufferGeometry( 1, 1, 1, 2,2,2 );\n        // var material = new THREE.MeshPhongMaterial( {\n        //     color: 0xff0000,\n        //     shininess: 100,\n        //     specular: 0xeaeaea\n        // } );\n        // this.torusKnot = new THREE.Mesh( geometry, material );\n        // this.torusKnot.position.set( 0, 0, 0 );\n        // this.torusKnot.castShadow = true;\n        // this.torusKnot.receiveShadow = true;\n        // // this.scene.add( this.torusKnot );\n        //\n        this.planeGeo = new THREE.PlaneGeometry(1000,1000,2,2);\n        var material = new THREE.MeshPhongMaterial( {\n            color: 0xffffff,\n            // shininess: 10,\n            // specular: 0xd8d4e1,\n            // shading: THREE.SmoothShading\n        } );\n        var receiveshadowmesh = new THREE.Mesh( this.planeGeo, material );\n        receiveshadowmesh.rotateX(-Math.PI/2);\n        receiveshadowmesh.position.y = 0.1;\n        receiveshadowmesh.receiveShadow = true;\n        // this.scene.add( receiveshadowmesh );\n\n        let clipping = new THREE.Plane(new THREE.Vector3(0,1,0),0);\n        // this.renderer.clippingPlanes.push(clipping);\n\n\n        // let clipping02 = new THREE.Plane(new THREE.Vector3(0,-1,0),30);\n        // clipping02.position.set(0,20,0);\n        // this.renderer.clippingPlanes.push(clipping02);\n\n        this.planeGeo = new THREE.PlaneGeometry(1000,1000,300,300);\n        let planematerial = new THREE.MeshLambertMaterial({\n            color:0x9400ff,\n            shininess: 10,\n            specular: 0x9400ff,\n            side:THREE.DoubleSide,\n            // shading:THREE.FlatShading,\n\n        });\n\n\n\n        let planemesh = new THREE.Mesh(this.planeGeo,planematerial);\n        planemesh.rotateX(-Math.PI/2);\n        planemesh.position.set(0,0.1,0);\n        planemesh.receiveShadow = true;\n        //this.scene.add(planemesh);\n\n\n        var geometry = new THREE.PlaneGeometry( 10, 10);\n        var material = new THREE.MeshPhongMaterial( {\n            color: 0xffffff,\n            // shininess: 10,\n            // specular: 0x111111,\n            side: THREE.DoubleSide\n        } );\n        var mesh = new THREE.Mesh( geometry, material );\n        mesh.rotateX(-Math.PI/2);\n        mesh.position.set(0,-20,0);\n        mesh.receiveShadow = true;\n        // this.scene.add( mesh );\n\n\n        for(var i = 0; i < this.planeGeo.vertices.length;i++)\n        {\n            let dist =this.planeGeo.vertices[i].distanceTo(new THREE.Vector3(0,0,0));\n            // console.log(dist);\n            // console.log(dist/ 720);\n        }\n\n\n        this.group = new THREE.Group();\n        let radian = 0.0;\n        let _radius = 10;\n        let radius = 60;\n        for(var i = 0; i < 300; i++) {\n\n            let tetGeometry = new THREE.SphereBufferGeometry(2,20,20);\n            let tetMaterial = new THREE.MeshLambertMaterial({\n                color:0x9400ff,\n                shading:THREE.FlatShading,\n                transparent:true,\n                // opacity:0.2\n            });\n\n            //(r sinsθ cosΦ, r cosθ, r sinθ sinΦ)\n\n            let tetMesh = new THREE.Mesh(tetGeometry, tetMaterial);\n\n            radian += 0.1+Math.random()*0.1;\n            let vec3 = this.getSpherePosition(Math.random()*this.limitDist);\n            let x = Math.random()*100 -50;//vec3.x;\n            let z = Math.random()*this.limitDist -1;vec3.y;//Math.sin(radian)*radius;\n            let y = Math.random()*100 -50;//vec3.z;//Math.sin(Math.random()*Math.PI*2) * 2;\n            tetMesh.position.set(x,y,z);\n\n            var r = new THREE.Vector3(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2);\n            this.rotations.push(r);\n            tetMesh.rotation.set(r.x,r.y,r.z);\n            tetMesh.castShadow = true;\n\n\n            // tetMesh.receiveShadow = true;\n\n            this.vec.push(new THREE.Vector3(x,y,z).normalize());\n            this.rotate.push(new THREE.Vector3(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2));\n            this.objs.push(tetMesh);\n            this.group.add(tetMesh);\n\n            this.tetValues.push({\n                radian:radian,\n                radius:radius,\n                pos:tetMesh.position\n\n            })\n        }\n\n        // this.group.rotateZ(0.6);\n        // this.group.rotateX(0.3);\n        this.scene.add(this.group);\n\n\n\n        // let controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n    }\n\n\n    public getSpherePosition(radius:number)\n    {\n\n        //(r sinsθ cosΦ, r cosθ, r sinθ sinΦ)\n\n        let theta = Math.random()*Math.PI*2;\n        let phi = Math.random()*Math.PI*2;\n        let x = radius * Math.sin(theta)*Math.cos(phi);\n        let y = radius * Math.cos(theta);\n        let z = radius * Math.sin(theta)*Math.sin(phi);\n\n        return new THREE.Vector3(x,y,z);\n    }\n\n        private snoiseVec3( x:THREE.Vector3 ){\n\n        let s  = this.noise.noise3D( x.x,x.y,x.z );\n        let s1 = this.noise.noise3D( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 );\n        let s2 = this.noise.noise3D( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 );\n        let c = new THREE.Vector3( s , s1 , s2 );\n        return c;\n\n    }\n\n    private curlNoise( p:THREE.Vector3 ,time)\n    {\n\n        let e = 0.1;\n        let dx = new THREE.Vector3( e   , 0.0 , 0.0 );\n        let dy = new THREE.Vector3( 0.0 , e   , 0.0 );\n        let dz = new THREE.Vector3( 0.0 , 0.0 , e   );\n\n\n        var _p  = new THREE.Vector3(p.x,p.y,p.z).sub(dx);\n        let p_x0 = this.snoiseVec3( _p);\n\n        _p  = new THREE.Vector3(p.x,p.y,p.z).add(dx);\n        let p_x1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dy);\n        let p_y0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dy);\n        let p_y1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dz);\n        let p_z0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dz);\n        let p_z1 = this.snoiseVec3( _p );\n\n        let x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n        let y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n        let z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n        //console.log(p_z0);\n        let divisor = 1.0 / ( 2.0 * e );\n        let noisevec = new THREE.Vector3( x , y , z );\n        noisevec.multiplyScalar(divisor);\n        return noisevec;\n\n    }\n\n    public keyDown(keycode)\n    {\n\n        // console.log(keycode);\n        if(keycode.key == \"s\")\n        {\n            console.log(\"stop\");\n            this.isSlowDown = true;\n        }\n\n    }\n\n    public keyUp(e:KeyboardEvent)\n    {\n\n        this.isSlowDown = false;\n    }\n\n    // ワンフレームごとの処理\n    public update() {\n\n        this.renderer.setClearColor(0x9400ff);\n\n        let rad = 100;\n\n        if(this.isSlowDown)\n        {\n            this.speed = 0.001;\n\n        } else {\n            this.speed = 0.02;\n\n        }\n\n        this.time += this.speed;\n\n\n        let noiseSpeed = 10;\n\n\n\n\n\n        for(let i = 0; i < this.objs.length; i++)\n        {\n\n\n\n            let pos = this.objs[i].position;\n            let speed = 0.01;\n            let vector = new THREE.Vector3(this.vec[i].x,this.vec[i].y,this.vec[i].z);\n            // vector.multiplyScalar(0.1);\n            pos.add(vector.normalize().multiplyScalar(this.speed));\n\n            let noiseScale = 0.02;// + Math.random()*0.05;\n            let noiseValueX = this.noise.noise3D(pos.x*noiseScale,pos.z*noiseScale,this.time+0.1365143);\n            let noiseValueY = this.noise.noise3D(pos.y*noiseScale,pos.x*noiseScale,this.time+1.21688);\n            let noiseValueZ = this.noise.noise3D(pos.z*noiseScale,pos.y*noiseScale,this.time+2.5564);\n\n            let noiseVec = new THREE.Vector3(noiseValueX,noiseValueY,noiseValueZ);\n\n            noiseVec.y = 1.0;\n            pos.add(noiseVec.multiplyScalar(this.speed*10));\n\n\n            let dist = pos.distanceTo(new THREE.Vector3(0,0,0));\n            //let maxDist = pos.distanceTo(new THREE.Vector3(0,0,0));\n\n            if(dist > this.limitDist)\n            {\n                let newpos = this.getSpherePosition(Math.random()*6);\n\n                let x = Math.random()*90 -45;//vec3.x;\n                let z = Math.random()*90 -45;//vec3.y;//Math.sin(radian)*radius;\n                let y = Math.random()*-1;//vec3.z;//Math.sin(Math.random()*Math.PI*2) * 2;\n\n                pos.set(x,y,z);\n\n                this.vec[i] = new THREE.Vector3(pos.x,pos.y,pos.z);\n            }\n\n            let scale = (1.0 - dist/this.limitDist)*0.7;\n\n            let c = Math.max(Math.floor((1.0 - dist/this.limitDist)*255),255);\n            let g = Math.floor(c*0.5);\n            // console.log(c);\n\n            // console.log(\"rgb(\" + c + \",\" + \"0.0\" + \",\" + c + \")\");\n            // this.objs[i].material.color.set(\n            //     new THREE.Color(\"rgb(\" + c + \",\" + g + \",\" + c + \")\")\n            //     );\n\n            this.objs[i].scale.set(scale,scale,scale);\n\n            // this.rotate[i].x += this.rotate[i].x*0.002;\n            // this.rotate[i].y += this.rotate[i].y*0.002;\n            // this.rotate[i].z += this.rotate[i].z*0.002;\n\n            this.objs[i].rotation.set(this.rotate[i].x*2,this.rotate[i].y*2,this.rotate[i].z*2);\n\n\n\n        }\n        //\n        // let x = 0.0;\n        // let y = 0.0;\n        // let z = 0.0;\n        // for(var i = 0; i < this.rotations.length; i++)\n        // {\n        //     this.rotations[i].x += 0.003;\n        //     this.rotations[i].y += 0.003;\n        //     this.rotations[i].z += 0.003;\n        //\n        //     this.objs[i].rotation.set(this.rotations[i].x,this.rotations[i].y,this.rotations[i].z);\n        //\n        //     this.tetValues[i].radian += 0.002;\n        //\n        //     let radisu  = 100+Math.random()*100;\n        //\n        //     x = Math.cos(this.tetValues[i].radian)*radisu;\n        //     z = Math.sin(this.tetValues[i].radian)*radisu;\n        //     y = Math.sin(Math.random()*Math.PI*2) * 10;\n        //\n        //     this.objs[i].position.x = x;\n        //     this.objs[i].position.z = z;\n        //\n        //\n        //\n        //     var noise = this.noise.noise3D(this.objs[i].position.x*0.04,this.objs[i].position.y*0.04,this.time*0.04+this.objs[i].position.z*0.04);\n        //\n        //     this.objs[i].position.y = noise*4;\n        //\n        //\n        // }\n\n\n        // this.renderer.setClearColor(this.scene.fog.color);\n\n        this.time += 0.003;\n        //\n        for(var i = 0; i < this.planeGeo.vertices.length;i++)\n        {\n            let vert = this.planeGeo.vertices[i];\n            var value = this.noise.noise3D(vert.x*0.01,vert.y*0.01,this.time * 0.1);\n\n            let dist =this.planeGeo.vertices[i].distanceTo(new THREE.Vector3(0,0,0));\n            let height =  0.9-dist/720;\n            // console.log(height);\n            // this.planeGeo.vertices[i].z = value + height;\n            this.planeGeo.vertices[i].z = value *20;\n        }\n        this.planeGeo.verticesNeedUpdate = true;\n\n\n        let camX = Math.cos(this.time*0.5) * 30;\n        let camZ = Math.sin(this.time*0.5) * 30;\n        let camY = 60 + Math.sin(this.time*0.8)*30;\n        this.camera.lookAt(new THREE.Vector3(0,0,0));\n        this.camera.position.set(camX,camY,camZ)\n\n\n        this.pointLight02.position.z = Math.cos(this.time) * 10;\n        this.pointLight02.position.x = Math.sin(this.time) * 10;\n\n\n        this.pointLight01.position.z = Math.cos(this.time+Math.PI) * 10;\n        this.pointLight01.position.x = Math.sin(this.time+Math.PI) * 10;\n\n    }\n\n\n\n\n\n}\n\n\n"]}