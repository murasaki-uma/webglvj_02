{"version":3,"file":"NoiseWaveLogo.js","sourceRoot":"","sources":["NoiseWaveLogo.ts"],"names":[],"mappings":"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","sourcesContent":["\n\nclass NoiseWaveLogo {\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n    private renderer: THREE.WebGLRenderer;\n    private geometry: THREE.PlaneGeometry;\n\n    private timer:number = 0.0;\n\n    public UPDATE:boolean = true;\n    private normalMap;\n    private map;\n    private displacementMap;\n    private simplex:Object;\n    private originalVertex:THREE.Vector3[] = [];\n    private velocity:number = 1.0;\n    private acceleration:number = 1.0;\n\n    private randomNoiseSeed:number = 0.0;\n\n    private settings:Object = {\n        metalness: 0.1,\n        roughness: 0.2,\n        ambientIntensity: 0.1,\n        aoMapIntensity: 1.0,\n        envMapIntensity: 1.0,\n        displacementScale: 2.436143, // from original model\n        normalScale: 1.0\n    };\n\n    public END:boolean = false;\n\n    constructor(renderer:THREE.WebGLRenderer) {\n\n        // レンダラーを作成\n        //this.createRenderer();\n        // シーンを作成\n        this.renderer = renderer;\n        this.createScene();\n\n    }\n    public remove()\n    {\n\n        while(this.scene.children.length != 0)\n        {\n            this.scene.remove(this.scene.children[0]);\n            if(this.scene.children[0] == THREE.Mesh){\n                this.scene.children[0].geometry.dispose();\n                this.scene.children[0].material.dispose();\n            }\n        };\n\n\n\n    }\n\n\n    private createScene(){\n\n        this.randomNoiseSeed = Math.random()*0.4-0.02;\n\n\n        this.simplex = new SimplexNoise();\n        // シーン (空間) を作成\n        this.scene = new THREE.Scene();\n\n        this.geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var textureLoader = new THREE.TextureLoader();\n\n\n\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.Fog(0x000000,-500,3000);\n\n        var ambient = new THREE.AmbientLight(0xffffff, 2);\n        this.scene.add(ambient);\n\n\n        var light = new THREE.SpotLight( 0xffffff );\n        light.position.set( 0, 1000, 0 );\n        light.castShadow = true;\n\n        light.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 400, 20000 ) );\n        light.shadow.bias = - 0.00022;\n//\n        light.shadow.mapSize.width = 2048;\n        light.shadow.mapSize.height = 2048;\n        this.scene.add(light);\n\n\n        var light02 = new THREE.SpotLight( 0xffffff,0.4 );\n        light02.position.set( 0, 10, 0 );\n        this.scene.add(light02);\n\n\n\n        var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        dirLight.name = 'Dir. Light';\n        dirLight.position.set( 0, 100, 0 );\n        this.scene.add(dirLight);\n\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 );\n\n\n        this.camera.position.z = 5;\n\n\n\n        this.map = textureLoader.load( \"texture/logo.png\" );\n\n\n        let size = 6.0;\n        this.geometry = new THREE.PlaneGeometry(size,0.6576*size,60,60);\n        var planeMaterial = new THREE.MeshStandardMaterial({\n            color:0xffffff,\n            map:this.map,\n            side: THREE.DoubleSide\n        });\n\n        //planeGeo.rotateX(-Math.PI/2);\n        var obj = new THREE.Mesh(this.geometry,planeMaterial);\n        // obj.position.y = -600;\n        // obj.position.z = 1000;\n        // obj.castShadow= true;\n        // obj.receiveShadow = true;\n        this.scene.add(obj);\n\n\n        console.log(this.geometry);\n        let array = this.geometry.vertices;\n        for (let i = 0; i < array.length; i++) {\n            let vertex = new THREE.Vector3(array[i].x,array[i].y,array[i].z);\n            this.originalVertex[i] = vertex;\n        }\n\n    }\n\n    public keyDown(e)\n    {\n        if(e.key == \"r\")\n        {\n            console.log(\"down\");\n            let array = this.geometry.vertices;\n            for (let i = 0; i < array.length; i++) {\n                array[i].x = this.originalVertex[i].x;\n                array[i].y = this.originalVertex[i].y;\n                array[i].z = this.originalVertex[i].z;\n            }\n\n            this.geometry.verticesNeedUpdate = true;\n            this.geometry.normalsNeedUpdate = true;\n\n\n            this.randomNoiseSeed = Math.random()*0.9-0.3;\n            console.log(this.randomNoiseSeed);\n            if(Math.random() < 0.5)\n            {\n                this.velocity = -1;\n            } else {\n                this.velocity = 1.0;\n            }\n        }\n\n        if(e.key == \"v\")\n        {\n\n                this.velocity *= -1;\n\n        }\n\n\n        if(e.key == \"a\")\n        {\n            if(this.acceleration == 1.0)\n            {\n                this.acceleration = 4.0;\n            } else {\n                this.acceleration = 1.0;\n            }\n        }\n\n    }\n\n\n    public onWindowResize() {\n\n        // this.camera.aspect = window.innerWidth / window.innerHeight;\n        // this.camera.updateProjectionMatrix();\n        //\n        // this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n    }\n\n    public endEnabled()\n    {\n        this.UPDATE = false;\n    }\n\n    private snoiseVec3( x:THREE.Vector3 ){\n\n        let s  = this.simplex.noise3D( x.x,x.y,x.z );\n        let s1 = this.simplex.noise3D( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 );\n        let s2 = this.simplex.noise3D( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 );\n        let c = new THREE.Vector3( s , s1 , s2 );\n        return c;\n\n    }\n\n    private curlNoise( p:THREE.Vector3,time:number)\n    {\n\n        let e = 0.1+this.randomNoiseSeed;\n        let dx = new THREE.Vector3( e   , 0.0 , 0.0 );\n        let dy = new THREE.Vector3( 0.0 , e   , 0.0 );\n        let dz = new THREE.Vector3( 0.0 , 0.0 , e   );\n\n\n        var _p  = new THREE.Vector3(p.x,p.y,p.z).sub(dx);\n        let p_x0 = this.snoiseVec3( _p);\n\n        _p  = new THREE.Vector3(p.x,p.y,p.z).add(dx);\n        let p_x1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dy);\n        let p_y0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dy);\n        let p_y1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dz);\n        let p_z0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dz);\n        let p_z1 = this.snoiseVec3( _p );\n\n        let x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n        let y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n        let z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n        //console.log(p_z0);\n        let divisor = 1.0 / ( 2.0 * e );\n        let noisevec = new THREE.Vector3( x , y , z );\n        noisevec.multiplyScalar(divisor);\n        return noisevec;\n\n    }\n\n\n    public update() {\n        this.renderer.setClearColor(0xffffff,0.0);\n\n        let array = this.geometry.vertices;\n        let date = new Date();\n        this.timer += Math.abs(this.simplex.noise3D( date.getMilliseconds()*0.1,date.getMinutes()*0.05,date.getHours()*0.01 ))*2.0;\n\n\n        let time = Math.abs(Math.sin(this.timer));\n        // this.noise.noise3D(this.objs[i].position.x*0.04,this.objs[i].position.y*0.04,this.time*0.04+this.objs[i].position.z*0.04);\n        for (let i = 0; i < array.length; i++) {\n            let scale = this.randomNoiseSeed;\n            let seed = new THREE.Vector3(array[i].x * scale, array[i].y * scale, array[i].z * scale, time);\n\n            let noiseVec:THREE.Vector3 = this.curlNoise(seed);\n            array[i].x += Math.cos(noiseVec.x) * 0.01*time*this.velocity*this.acceleration;\n            array[i].y += Math.sin(noiseVec.y) * 0.01*time*this.velocity*this.acceleration;\n        }\n\n        this.geometry.verticesNeedUpdate = true;\n        this.geometry.normalsNeedUpdate = true;\n\n\n    }\n\n\n\n\n\n\n\n    // public render(){\n    //     this.renderer.render(this.scene, this.camera);\n    //\n    // }\n\n}\n\n"]}