{"version":3,"file":"instancing_Box.js","sourceRoot":"","sources":["instancing_Box.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"typings/index.d.ts\" />\n\nclass InstancingLines{\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n    private renderer:THREE.WebGLRenderer;\n    private noise:Object;\n    private time:Float32Array;\n\n    private geometry:THREE.InstancedBufferGeometry;\n    private material:THREE.RawShaderMaterial;\n    private mesh:THREE.Mesh;\n\n\n\n    private WIDTH:number;\n    private PARTICLES:number;\n\n\n\n\n    constructor(renderer:THREE.WebGLRenderer) {\n\n        // renderer.setClearColor(0xffffff);\n        this.renderer = renderer;\n        this.createScene();\n\n        let width = 100;\n        this.WIDTH = width;\n        this.PARTICLES =  width * width;\n\n    }\n\n\n\n    // シーンを作る。ここでオブジェクトを格納していく。\n    private createScene(){\n\n        this.time = new Float32Array(1);\n        this.time[0] = 0.0;\n        this.noise = new SimplexNoise();\n\n\n        // シーンを作る\n        this.scene = new THREE.Scene();\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 50, window.innerWidth/window.innerHeight, 0.1, 10000 );\n        // this.camera.position.z = 1400;\n        // this.camera.position.y = 20;\n\n        this.renderer.setClearColor(new THREE.Color(0x000000));\n\n\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n\n        var instances = 65000;\n\n\n\n\n        this.geometry = new THREE.InstancedBufferGeometry();\n        this.geometry.maxInstancedCount = instances;\n\n        var vertices = new THREE.BufferAttribute( new Float32Array( triangles * 3 * 3 ), 3 );\n        vertices.setXYZ( 0, 0.025, -0.025, 0 );\n        vertices.setXYZ( 1, -0.025, 0.025, 0 );\n        vertices.setXYZ( 2, 0, 0, 0.025 );\n\n        this.geometry.addAttribute('position',vertices);\n\n        var offsets = new THREE.InstancedBufferAttribute( new Float32Array( instances * 2 ), 2, 1 );\n\n\n        for ( var i = 0, ul = offsets.count; i < ul; i++ ) {\n            offsets.setXYZ( i, Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5 );\n        }\n\n        this.geometry.addAttribute( 'offset', offsets );\n\n\n        var colors = new THREE.InstancedBufferAttribute( new Float32Array( instances * 4 ), 4, 1 );\n        for ( var i = 0, ul = colors.count; i < ul; i++ ) {\n            colors.setXYZW( i, Math.random(), Math.random(), Math.random(), Math.random() );\n        }\n\n        this.geometry.addAttribute( 'color', colors );\n\n\n        var vector = new THREE.Vector4();\n        var orientationsStart = new THREE.InstancedBufferAttribute( new Float32Array( instances * 4 ), 4, 1 );\n        for ( var i = 0, ul = orientationsStart.count; i < ul; i++ ) {\n            vector.set( Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1 );\n            vector.normalize();\n            orientationsStart.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n        }\n        this.geometry.addAttribute( 'orientationStart', orientationsStart );\n\n        var orientationsEnd = new THREE.InstancedBufferAttribute( new Float32Array( instances * 4 ), 4, 1 );\n        for ( var i = 0, ul = orientationsEnd.count; i < ul; i++ ) {\n            vector.set( Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1 );\n            vector.normalize();\n            orientationsEnd.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n        }\n        this.geometry.addAttribute( 'orientationEnd', orientationsEnd );\n\n\n\n\n        this.material = new THREE.RawShaderMaterial( {\n            uniforms: {\n                time: { value: 1.0 },\n                sineTime: { value: 1.0 }\n            },\n            vertexShader: document.getElementById( 'vertexShader_line' ).textContent,\n            fragmentShader: document.getElementById( 'fragmentShader_line' ).textContent,\n            side: THREE.DoubleSide,\n            transparent: true\n        } );\n\n        this.mesh = new THREE.Mesh( this.geometry, this.material );\n        this.scene.add( this.mesh );\n\n\n        let controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n\n\n\n    }\n\n\n    public click()\n    {\n\n    }\n\n    public keyDown()\n    {\n\n    }\n    // ワンフレームごとの処理\n    public update() {\n\n\n        var time = performance.now();\n        var object = this.scene.children[0];\n        object.rotation.y = time * 0.0005;\n        object.material.uniforms.time.value = time * 0.005;\n        object.material.uniforms.sineTime.value = Math.sin( object.material.uniforms.time.value * 0.05 );\n\n\n\n\n\n\n\n    }\n\n\n}\n\n\n"]}