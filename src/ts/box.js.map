{"version":3,"file":"box.js","sourceRoot":"","sources":["box.ts"],"names":[],"mappings":"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","sourcesContent":["\n\nclass FloatingBox {\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n    private renderer: THREE.WebGLRenderer;\n    private geometry: THREE.Geometry;\n    private material: THREE.Material;\n    private cube: THREE.Mesh;\n    private objs:any[] = [];\n\n    private timer:number = 0.0;\n    private objects:THREE.Mesh[] = [];\n    private radius:number = 400;\n    private position_origin:number[] = [];\n    private animateVector:THREE.Vector3[] = [];\n    private pre_sec;\n    private cameraNextPos:THREE.Vector3;\n    private cameraNextLookAt:THREE.Vector3;\n    private cameraLookAt:THREE.Vector3;\n    public UPDATE:boolean = true;\n    private normalMap;\n    private map;\n    private displacementMap;\n    private simplex:Object;\n\n    private settings:Object = {\n        metalness: 0.1,\n        roughness: 0.2,\n        ambientIntensity: 0.1,\n        aoMapIntensity: 1.0,\n        envMapIntensity: 1.0,\n        displacementScale: 2.436143, // from original model\n        normalScale: 1.0\n    };\n\n    public END:boolean = false;\n\n    constructor(renderer:THREE.WebGLRenderer) {\n\n        // レンダラーを作成\n        //this.createRenderer();\n        // シーンを作成\n        this.renderer = renderer;\n        this.createScene();\n\n    }\n    public remove()\n    {\n\n        while(this.scene.children.length != 0)\n        {\n            this.scene.remove(this.scene.children[0]);\n            if(this.scene.children[0] == THREE.Mesh){\n                this.scene.children[0].geometry.dispose();\n                this.scene.children[0].material.dispose();\n            }\n        };\n\n\n\n    }\n\n    private createRenderer(){\n\n\n        // WebGL レンダラーを作成\n        this.renderer = new THREE.WebGLRenderer();\n        // サイズの設定\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.renderer.sortObjects = false;\n\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFShadowMap;\n\n\n        document.body.appendChild( this.renderer.domElement );\n\n\n    }\n\n    private createScene(){\n\n        this.simplex = new SimplexNoise();\n        this.scene = new THREE.Scene();\n\n        this.geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var textureLoader = new THREE.TextureLoader();\n\n\n\n        var normalMap = textureLoader.load( \"texture/nomalmap.png\" );\n        //var map = textureLoader.load( \"textures/tilemap.png\" );\n        var displacementMap = textureLoader.load( \"texture/bumpmap.jpg\" );\n\n        var cubeMaterial = new THREE.MeshStandardMaterial({\n            color: 0xaaaaaa, specular: 0xffffff, shininess: 250,\n            roughness: this.settings.roughness,\n            metalness: this.settings.metalness,\n\n            normalMap: normalMap,\n            normalScale: new THREE.Vector2( 1, - 1 ), // why does the normal map require negation in this case?\n\n            displacementMap: displacementMap,\n            displacementScale: this.settings.displacementScale,\n            displacementBias: - 0.428408, // from original model\n        });\n\n        this.material =  new THREE.MeshStandardMaterial({\n            color: 0xaaaaaa, specular: 0xffffff, shininess: 250,\n            roughness: this.settings.roughness,\n            metalness: this.settings.metalness,\n\n            normalMap: normalMap,\n            normalScale: new THREE.Vector2( 1, - 1 ), // why does the normal map require negation in this case?\n\n            displacementMap: displacementMap,\n            displacementScale: this.settings.displacementScale,\n            displacementBias: - 0.428408, // from original model\n        });\n\n        this.cube = new THREE.Mesh( this.geometry, cubeMaterial );\n        this.scene.add( this.cube );\n\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.Fog(0x000000,-500,2500);\n\n        var ambient = new THREE.AmbientLight(0xffffff, 0.8);\n        this.scene.add(ambient);\n\n\n        var light = new THREE.SpotLight( 0xffffff );\n        light.position.set( 0, 1000, 0 );\n        light.castShadow = true;\n\n        light.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 400, 20000 ) );\n        light.shadow.bias = - 0.00022;\n//\n        light.shadow.mapSize.width = 2048;\n        light.shadow.mapSize.height = 2048;\n        this.scene.add(light);\n\n\n        var light02 = new THREE.SpotLight( 0xffffff,0.4 );\n        light02.position.set( 0, 10, 0 );\n        this.scene.add(light02);\n\n\n\n        var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        dirLight.name = 'Dir. Light';\n        dirLight.position.set( 0, 100, 0 );\n        this.scene.add(dirLight);\n\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 );\n\n\n        this.camera.position.z = 1000;\n\n        this.cameraNextPos = new THREE.Vector3(\n            Math.random()*30-30,\n            Math.random()*30-30,\n            Math.random()*30-30+1000);\n\n        this.cameraNextLookAt = new THREE.Vector3(\n            Math.random()*30-30,\n            Math.random()*30-30,\n            Math.random()*30-30);\n        this.cameraLookAt= new THREE.Vector3(\n            Math.random()*40-20,\n            Math.random()*40-20,\n            Math.random()*40-40);\n\n\n        var settings = {\n            metalness: 0.1,\n            roughness: 0.2,\n            ambientIntensity: 0.1,\n            aoMapIntensity: 1.0,\n            envMapIntensity: 1.0,\n            displacementScale: 2.436143, // from original model\n            normalScale: 1.0\n        };\n\n\n\n        this.normalMap = textureLoader.load( \"texture/comp/tilenormalmap.png\" );\n        this.map = textureLoader.load( \"texture/comp/tilemap.png\" );\n        this.displacementMap = textureLoader.load( \"texture/comp/tilehightmap.jpg\" );\n\n\n        var planeGeo = new THREE.PlaneGeometry(6000,6000,10,10);\n        var planeMaterial = new THREE.MeshStandardMaterial({\n            color:0xffffff,\n            roughness: settings.roughness,\n            metalness: settings.metalness,\n            normalMap: this.normalMap,\n            normalScale: new THREE.Vector2( 1, - 1 ), // why does the normal map require negation in this case?\n            displacementMap: this.displacementMap,\n            displacementScale: settings.displacementScale,\n            displacementBias: - 0.428408, // from original model\n            map:this.map,\n            side: THREE.DoubleSide\n        });\n        var planeWireMaterial = new THREE.MeshPhongMaterial({\n            color:0x000000,\n            wireframe:true\n        });\n\n        planeGeo.rotateX(-Math.PI/2);\n        var obj = new THREE.Mesh(planeGeo,planeMaterial);\n        obj.position.y = -600;\n        obj.position.z = 1000;\n        obj.castShadow= true;\n        obj.receiveShadow = true;\n        this.scene.add(obj);\n        var geometry = new THREE.BoxGeometry( 40, 40, 40 );\n        var material = new THREE.MeshPhongMaterial( {\n            color:  0x111111,\n            // color:  0xffffff,\n            specular: 0x555555,\n            shininess: 10,\n            shading:THREE.FlatShading\n        } );\n\n\n\n        for ( var i = 0; i < 700; i ++ ) {\n\n            var theta = Math.random()*Math.PI*2;\n            var phi = Math.random()*Math.PI*2;\n            var object = new THREE.Mesh( geometry, this.material);\n            object.position.x = Math.sin(theta) * Math.cos(phi) * this.radius;\n            object.position.y = Math.cos(theta) * this.radius;\n            object.position.z = Math.sin(theta) * Math.sin(phi) * this.radius;\n\n            this.position_origin.push(new THREE.Vector3(object.position.x,object.position.y,object.position.z));\n            vec = new THREE.Vector3(theta,phi,0);\n            this.animateVector.push(vec);\n\n            object.rotation.x = Math.random() * 2 * Math.PI;\n            object.rotation.y = Math.random() * 2 * Math.PI;\n            object.rotation.z = Math.random() * 2 * Math.PI;\n            object.castShadow = true;\n            object.receiveShadow = true;\n\n            this.scene.add( object );\n\n            this.objects.push( object );\n\n        }\n\n        var points = [];\n        for(var i = 0; i < 10; i++)\n        {\n            var randomx = -20 + Math.round(Math.random()*200);\n            var randomy = -15 + Math.round(Math.random()*400);\n            var randomz = -20 + Math.round(Math.random()*400);\n            points.push(new THREE.Vector3(randomx,randomy,randomz));\n        }\n\n        console.log(this.scene);\n\n        //window.addEventListener( 'resize', this.onWindowResize, false );\n\n    }\n\n    public onWindowResize() {\n\n        // this.camera.aspect = window.innerWidth / window.innerHeight;\n        // this.camera.updateProjectionMatrix();\n        //\n        // this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n    }\n\n    public getSpherePosition(radius:number)\n    {\n\n        //(r sinsθ cosΦ, r cosθ, r sinθ sinΦ)\n\n        let theta = Math.random()*Math.PI*2;\n        let phi = Math.random()*Math.PI*2;\n        let x = radius * Math.sin(theta)*Math.cos(phi);\n        let y = radius * Math.cos(theta);\n        let z = radius * Math.sin(theta)*Math.sin(phi);\n\n        return new THREE.Vector3(x,y,z);\n    }\n\n\n\n    private snoiseVec3( x:THREE.Vector3 ){\n\n        let s  = this.simplex.noise3D( x.x,x.y,x.z );\n        let s1 = this.simplex.noise3D( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 );\n        let s2 = this.simplex.noise3D( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 );\n        let c = new THREE.Vector3( s , s1 , s2 );\n        return c;\n\n    }\n\n    private curlNoise( p:THREE.Vector3)\n    {\n\n        let e = 0.1;\n        let dx = new THREE.Vector3( e   , 0.0 , 0.0 );\n        let dy = new THREE.Vector3( 0.0 , e   , 0.0 );\n        let dz = new THREE.Vector3( 0.0 , 0.0 , e   );\n\n\n        var _p  = new THREE.Vector3(p.x,p.y,p.z).sub(dx);\n        let p_x0 = this.snoiseVec3( _p);\n\n        _p  = new THREE.Vector3(p.x,p.y,p.z).add(dx);\n        let p_x1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dy);\n        let p_y0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dy);\n        let p_y1 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).sub(dz);\n        let p_z0 = this.snoiseVec3( _p );\n\n        _p = new THREE.Vector3(p.x,p.y,p.z).add(dz);\n        let p_z1 = this.snoiseVec3( _p );\n\n        let x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n        let y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n        let z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n        //console.log(p_z0);\n        let divisor = 1.0 / ( 2.0 * e );\n        let noisevec = new THREE.Vector3( x , y , z );\n        noisevec.multiplyScalar(divisor);\n        return noisevec;\n\n    }\n\n    public endEnabled()\n    {\n        this.UPDATE = false;\n    }\n\n\n    public update()\n    {\n        this.renderer.setClearColor(this.scene.fog.color);\n\n        //console.log(this.END);\n        if(this.UPDATE == false)\n        {\n            //this.scene.remove(this.scene.children[0]);\n            this.remove();\n            if(this.scene.children.length == 0)\n            {\n                this.END = true;\n            }\n\n        }\n        var date = new Date();\n\n        if(this.cameraNextPos.distanceTo(this.camera.position) < 0.01) {\n\n\n            var dist = 800;\n            this.cameraNextPos = new THREE.Vector3(\n                Math.random() * dist - dist / 2,\n                Math.random() * dist - dist / 2,\n                Math.random() *2000-1000\n            );\n            this.cameraNextLookAt= new THREE.Vector3(\n                Math.random()*40-20,\n                Math.random()*40-20,\n                Math.random()*40-40);\n        }\n\n\n        this.timer += 0.01;\n\n\n        for(var i = 0; i < this.objects.length; i++)\n        {\n            // this.objects[i].rotation.x += 0.01;\n            // this.objects[i].rotation.y += 0.01;\n            // this.objects[i].rotation.z += 0.01;\n            // var _radius = 200 * Math.sin(this.timer) + this.radius;\n            // this.animateVector[i].x += 0.01;\n            // this.animateVector[i].y += 0.01;\n\n            // this.objects[i].position.x = Math.sin(this.animateVector[i].x) * Math.cos(this.animateVector[i].y) * _radius;\n            // this.objects[i].position.y = Math.cos(this.animateVector[i].x) * _radius;\n            // this.objects[i].position.z = Math.sin(this.animateVector[i].x) * Math.sin(this.animateVector[i].y) * _radius;\n\n            let p = this.objects[i].position;\n            let scale = 0.001;\n            let vec = this.curlNoise(new THREE.Vector3(p.x*scale,p.y*scale,p.z*scale));\n\n\n            this.objects[i].position.x +=vec.x;\n            this.objects[i].position.y +=vec.y;\n            this.objects[i].position.z +=vec.z;\n\n            let v = new THREE.Vector3(p.x,p.y,p.z);\n            this.objects[i].position.add(v.normalize());\n\n            let dist = this.objects[i].position.distanceTo(new THREE.Vector3(0,0,0));\n\n\n            let maxDist = 700;\n            if(dist <= maxDist)\n            {\n                this.objects[i].scale.set(1.0-dist/maxDist,1.0-dist/maxDist,1.0-dist/maxDist);\n            } else {\n\n                let newpos = this.getSpherePosition(10);\n                newpos.x += Math.sin(this.timer*5) * this.radius;\n                newpos.y += Math.cos(this.timer*3) * this.radius;\n                newpos.z += Math.sin(this.timer*7) * this.radius;\n                this.objects[i].position.set(newpos.x,newpos.y,newpos.z);\n\n            }\n\n\n        }\n\n\n        var speed = 0.008;\n        this.camera.position.x += (this.cameraNextPos.x-this.camera.position.x)*speed;\n        this.camera.position.y += (this.cameraNextPos.y-this.camera.position.y)*speed;\n        this.camera.position.z += (this.cameraNextPos.z-this.camera.position.z)*speed;\n\n        this.cameraLookAt.x += (this.cameraNextLookAt.x-this.cameraLookAt.x)*speed;\n        this.cameraLookAt.y += (this.cameraNextLookAt.y-this.cameraLookAt.y)*speed;\n        this.cameraLookAt.z += (this.cameraNextLookAt.z-this.cameraLookAt.z)*speed;\n\n\n        var lookat = new THREE.Vector3(\n            this.cameraLookAt.x * Math.sin(this.timer),\n            this.cameraLookAt.y * Math.sin(this.timer),\n            this.cameraLookAt.z * Math.sin(this.timer)\n        );\n\n        this.camera.lookAt(lookat);\n\n    }\n\n\n\n    // public render(){\n    //     this.renderer.render(this.scene, this.camera);\n    //\n    // }\n\n}\n\n"]}