{"version":3,"file":"convex.js","sourceRoot":"","sources":["convex.ts"],"names":[],"mappings":"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","sourcesContent":["class Convex {\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n\n    public UPDATE:boolean = true;\n    public END:boolean = false;\n\n    private group:THREE.Group;\n    private convexmeshs:[];\n    private convexwiremeshs:[];\n    private milliseconds:any;\n    private plane:any;\n    private planegeomery:any;\n    private fov:any = -60;\n    private timer:any;\n    private timer_end:any;\n    private pre_sec:any;\n    private lightHelpers:any;\n    private noiseseed:[];\n    private planevertex:any;\n    private convexRotationValues:[];\n    private clearColor:any;\n    public color:THREE.Color;\n    private camera_timer:number = 0;\n    public meshMaterial:any;\n\n\n\n    public renderer:THREE.WebGLRenderer;\n    constructor() {\n\n        this.createScene();\n\n    }\n    public remove()\n    {\n\n        //console.log(this.scene.children);\n        while(this.scene.children.length != 0)\n        {\n            this.scene.remove(this.scene.children[0]);\n            if(this.scene.children[0] == THREE.Mesh){\n                this.scene.children[0].geometry.dispose();\n                this.scene.children[0].material.dispose();\n            }\n        };\n\n    }\n\n\n    private createScene(){\n\n        this.noiseseed = [];\n        this.milliseconds = 0.0;\n\n        var settings = {\n            metalness: 1.0,\n            roughness: 0.4,\n            ambientIntensity: 0.2,\n            aoMapIntensity: 1.0,\n            envMapIntensity: 1.0,\n            displacementScale: 100.436143, // from original model\n            normalScale: 1.0\n        };\n\n        this.clearColor = 0x7d7c7e;\n        this.convexmeshs = [];\n        this.convexwiremeshs = [];\n        this.convexRotationValues = [];\n        this.timer = 0.0;\n        this.timer_end= Math.PI;\n\n\n\n\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\n        this.camera.position.set( 0, 10, 150 );\n\n\n\n\n        // this.renderer = new THREE.WebGLRenderer();\n        // this.renderer.setPixelRatio( window.devicePixelRatio );\n        // this.renderer.setSize( window.innerWidth, window.innerHeight );\n        // document.body.appendChild( this.renderer.domElement );\n        // this.renderer.setClearColor(this.clearColor);\n        // this.scene.fog = new THREE.Fog(this.clearColor,0,1300);\n        // this.renderer.shadowMap.enabled = true;\n        // this.renderer.shadowMap.type = THREE.PCFShadowMap;\n\n\n\n\n\n\n\n\n        var dlight = new THREE.DirectionalLight(0xffffff,1.0);\n        dlight.position.set(0,1,0);\n        dlight.castShadow = true;\n        // this.scene.add(new THREE.DirectionalLightHelper(dlight,7));\n        this.scene.add(dlight);\n\n        var dlight02 = new THREE.DirectionalLight(0xffffff,1.0);\n        dlight02.position.set(0,1,1);\n        dlight02.castShadow = true;\n        // this.scene.add(new THREE.DirectionalLightHelper(dlight02,7));\n        this.scene.add(dlight02);\n\n        var pointlight = new THREE.PointLight(0xffffff,0.8,100,2);\n        pointlight.position.set(0,100,0);\n        pointlight.castShadow = true;\n        this.scene.add(pointlight);\n\n\n\n\n\n\n\n        // this.cameraControls = new THREE.OrbitControls(camera, renderer.domElement);\n\n        this.camera.lookAt(new THREE.Vector3(0,80,0));\n\n        //camera.lookAt = new THREE.Vector3(0,0,0);\n        this.scene.add( this.camera );\n\n//         var controls = new function () {\n// //            this.rotationSpeed = 0.03;\n// //            this.bouncingSpeed = 0.03;\n// //            this.ambientColor = 0xffffff;\n// //            this.pointColor = 0xffffff;\n// //            this.intensity = 1;\n// //            this.distance = 100;\n// //            this.decay = 1;\n//             this.clearColor = clearColor;\n//             this.fog = clearColor;\n//         };\n\n        // var gui = new dat.GUI();\n        // gui.addColor(controls, 'clearColor').onChange(function (e) {\n        //     renderer.setClearColor(e);// = new THREE.Color(e);\n        //     scene.fog = new THREE.Fog(new THREE.Color(e),0,1300);\n        //\n        // });\n\n        this.color = 0xffffff*Math.random();\n\n        this.meshMaterial = new THREE.MeshPhongMaterial( {\n            color: this.color,\n            shading:THREE.FlatShading,\n            //shiness:200\n            //wireframe:true\n\n        } );\n\n        var meshwireMaterial = new THREE.MeshBasicMaterial( {\n            color: 0xffffff,\n            transparent:true,\n            opacity: 0,\n            wireframe:true,\n            wireframeLinewidth:2\n        } );\n\n        for(var i = 0; i < 40; i++)\n        {\n            this.meshMaterial.wireframe = false;\n            var cvMesh = this.createConvexMesh(20,80,30,this.meshMaterial);\n            var pos = this.randomPoint();\n            cvMesh.position.set(pos.x*400,pos.y*800,pos.z*200-200);\n            cvMesh.castShadow = true;\n            cvMesh.receiveShadow = true;\n            this.convexmeshs.push(cvMesh);\n            this.scene.add(cvMesh);\n\n\n            var cvwireMesh = cvMesh.clone();\n            cvwireMesh.material = meshwireMaterial;\n            cvwireMesh.position = cvMesh.position;\n            this.convexwiremeshs.push(cvwireMesh);\n            //scene.add(cvwireMesh);\n\n            this.convexRotationValues.push({x:Math.random()*2-1,y:Math.random()*2-1,z:Math.random()*2-1,})\n\n\n\n        }\n\n    }\n\n    public createConvexMesh( width, height, depth, material)\n    {\n        var points = [];\n        for (var i = 0; i < 40; i++)\n        {\n            var randomX = -width/2 + Math.round(Math.random()*width);\n            var randomY = -height/2 + Math.round(Math.random()*height);\n            var randomZ = -depth/2 + Math.round(Math.random()*depth);\n            points.push(new THREE.Vector3(randomX,randomY,randomZ));\n        }\n\n        var cvGeo = new THREE.ConvexGeometry(points);\n        var cvMesh = new THREE.Mesh(cvGeo,material);\n\n        return cvMesh;\n\n    }\n\n    public randomPoint() {\n\n        return new THREE.Vector3( THREE.Math.randFloat( - 1, 1 ), THREE.Math.randFloat( - 1, 1 ), THREE.Math.randFloat( - 1, 1 ) );\n\n    }\n\n\n\n    public endEnabled()\n    {\n        this.UPDATE = false;\n    }\n\n\n    public update() {\n\n        this.camera_timer += 0.01;\n\n        //console.log(this.END);\n        if (this.UPDATE == false) {\n            //this.scene.remove(this.scene.children[0]);\n            this.remove();\n            if (this.scene.children.length == 0) {\n                this.END = true;\n            }\n\n        }\n\n\n\n        var date = new Date();\n\n\n\n        if(this.pre_sec != date.getSeconds()){\n            this.timer = 0.0;\n\n\n            for(var i = 0; i < this.noiseseed.length; i++)\n            {\n                this.noiseseed[i].x += 0.1;\n                this.noiseseed[i].y += 0.3;\n                this.noiseseed[i].z += 0.1;\n\n            }\n\n        }\n\n        this.timer += (this.timer_end - this.timer) *0.1;\n\n        for(var i = 0; i < this.convexmeshs.length; i++)\n        {\n            this.convexmeshs[i].rotation.y+=Math.sin(this.timer)*0.1;\n            this.convexmeshs[i].position.y += Math.sin(this.timer)*8+1;\n            this.convexwiremeshs[i].rotation.y = this.convexmeshs[i].rotation.y;\n            this.convexwiremeshs[i].position.y = this.convexmeshs[i].position.y;\n\n            this.convexmeshs[i].rotation.x +=this.convexRotationValues[i].x*0.01;\n            this.convexwiremeshs[i].rotation.x +=this.convexRotationValues[i].x*0.01;\n\n            this.convexmeshs[i].rotation.z+=this.convexRotationValues[i].z*0.01;\n            this.convexwiremeshs[i].rotation.z+=this.convexRotationValues[i].z*0.01;\n\n            if(this.convexmeshs[i].position.y > 800)\n            {\n                this.convexmeshs[i].position.y = -50;\n                this.convexwiremeshs[i].position.y = -50;\n            }\n\n        }\n\n\n\n        // this.camera.rotateY(0.1);\n        this.pre_sec = date.getSeconds();\n\n        this.camera.position.y = Math.sin(this.camera_timer) * 100-50;\n        //this.camera.position.x = Math.sin(this.camera_timer) *Math.sin(this.camera_timer) * 100;\n        this.camera.lookAt(new THREE.Vector3(0,80,0));\n\n        // this.render();\n\n    }\n\n    public render() {\n\n        // this.renderer.render( this.scene, this.camera );\n\n    }\n\n\n\n\n}\n\n"]}