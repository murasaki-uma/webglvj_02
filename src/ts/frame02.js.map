{"version":3,"file":"frame02.js","sourceRoot":"","sources":["frame02.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by PurpleUma on 1/8/17.\n */\n\n\n/// <reference path=\"typings/index.d.ts\" />\n\n\n\n\n\n\nvar offsetValueShader_frame = {\n    shader: [\n        '#define delta 10.0',\n        'void main() {',\n        '    // 正規化',\n        '    vec2 uv = gl_FragCoord.xy / resolution.xy;',\n        '    // offsetの取り出し',\n        '    vec4 offsetV = texture2D( offsetValue, uv);',\n        '    vec3 offset = offsetV.xyz;',\n        '    // Dynamics',\n        '    // ベクトルに速度を掛けて値を更新',\n        '    gl_FragColor = vec4( offset, 1.0 );',\n        '}'\n    ].join(\"\\n\")\n};\n\nvar computeShaderPosition_frame = {\n    shader: [\n        '#define delta ( 1.0 / 100.0 )',\n        'uniform float alpha;',\n        'uniform float offsetA_x;',\n        'uniform float offsetA_y;',\n        'uniform float offsetA_z;',\n        'uniform float offsetB_x;',\n        'uniform float offsetB_y;',\n        'uniform float offsetB_z;',\n        'uniform float offsetC_x;',\n        'uniform float offsetC_y;',\n        'uniform float offsetC_z;',\n        'uniform float reset;',\n        'uniform float time;',\n        'float rnd(vec2 p){',\n        '    return fract(sin(dot(p ,vec2(12.9898,78.233))) * 43758.5453);',\n        '}',\n        'void main() {',\n        '    // 正規化',\n        '    float nScale = 0.02;',\n        '    vec2 uv = gl_FragCoord.xy / resolution.xy;',\n        '    // テクスチャーから位置情報の取り出し',\n        '    vec4 tmpPos = texture2D( texturePosition, uv );',\n        '    float w = tmpPos.w;',\n        '    vec3 pos = tmpPos.xyz;',\n        '    // 移動するベクトルの取り出し',\n        '    vec4 tmpVel = texture2D( textureVelocity, uv );',\n        '    vec3 vel = tmpVel.xyz;',\n        '    // 最初の位置',\n        '    vec4 offsetV = texture2D( offsetValue, uv);',\n        '    vec3 offset = offsetV.xyz;',\n        '    //w -= 0.01;',\n        '    pos += vel*time;',\n        '    if(distance(pos.xyz,offsetV.xyz) > 600.0)',\n        '    {',\n        '        pos =offsetV.xyz;',\n        '    }',\n        '   if(reset == 1.0) {pos = offset;}',\n        '    gl_FragColor = vec4( pos.xyz, w );',\n        '}'\n    ].join(\"\\n\")\n};\n\nvar computeShaderVelocity_frame = {\n    shader:\n        [\n            '#include <common>',\n            '#define delta ( 1.0 / 200.0 )',\n            'uniform float time;',\n            'uniform float offsetX;',\n            'uniform float offsetY;',\n            'uniform float offsetZ;',\n            'uniform float scale;',\n            'uniform vec3 translate;',\n            'uniform float reset;',\n            'vec3 mod289(vec3 x) {',\n            '    return x - floor(x * (1.0 / 289.0)) * 289.0;',\n            '}',\n            'vec4 mod289(vec4 x) {',\n            '    return x - floor(x * (1.0 / 289.0)) * 289.0;',\n            '}',\n            'vec4 permute(vec4 x) {',\n            '    return mod289(((x*34.0)+1.0)*x);',\n            '}',\n            'vec4 taylorInvSqrt(vec4 r)',\n            '{',\n            '    return 1.79284291400159 - 0.85373472095314 * r;',\n            '}',\n            'float snoise(vec3 v)',\n            '{',\n            '    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;',\n            '    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);',\n            '    // First corner',\n            '    vec3 i  = floor(v + dot(v, C.yyy) );',\n            '    vec3 x0 =   v - i + dot(i, C.xxx) ;',\n            '    // Other corners',\n            '    vec3 g = step(x0.yzx, x0.xyz);',\n            '    vec3 l = 1.0 - g;',\n            '    vec3 i1 = min( g.xyz, l.zxy );',\n            '    vec3 i2 = max( g.xyz, l.zxy );',\n            '    vec3 x1 = x0 - i1 + C.xxx;',\n            '    vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y',\n            '    vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y',\n            '    // Permutations',\n            '    i = mod289(i);',\n            '    vec4 p = permute( permute( permute(',\n            '                        i.z + vec4(0.0, i1.z, i2.z, 1.0 ))',\n            '                + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))',\n            '        + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));',\n            '    // Gradients: 7x7 points over a square, mapped onto an octahedron.',\n            '    // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)',\n            '    float n_ = 0.142857142857; // 1.0/7.0',\n            '    vec3  ns = n_ * D.wyz - D.xzx;',\n            '    vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)',\n            '    vec4 x_ = floor(j * ns.z);',\n            '    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)',\n            '    vec4 x = x_ *ns.x + ns.yyyy;',\n            '    vec4 y = y_ *ns.x + ns.yyyy;',\n            '    vec4 h = 1.0 - abs(x) - abs(y);',\n            '    vec4 b0 = vec4( x.xy, y.xy );',\n            '    vec4 b1 = vec4( x.zw, y.zw );',\n            '    vec4 s0 = floor(b0)*2.0 + 1.0;',\n            '    vec4 s1 = floor(b1)*2.0 + 1.0;',\n            '    vec4 sh = -step(h, vec4(0.0));',\n            '    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;',\n            '    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;',\n            '    vec3 p0 = vec3(a0.xy,h.x);',\n            '    vec3 p1 = vec3(a0.zw,h.y);',\n            '    vec3 p2 = vec3(a1.xy,h.z);',\n            '    vec3 p3 = vec3(a1.zw,h.w);',\n            '    //Normalise gradients',\n            '    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));',\n            '    p0 *= norm.x;',\n            '    p1 *= norm.y;',\n            '    p2 *= norm.z;',\n            '    p3 *= norm.w;',\n            '    // Mix final noise value',\n            '    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);',\n            '    m = m * m;',\n            '    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),',\n            '                    dot(p2,x2), dot(p3,x3) ) );',\n            '}',\n            '// ************* noise ************* //',\n            'void main()\t{',\n            '    // 正規化',\n            '    vec2 uv = gl_FragCoord.xy / resolution.xy;',\n            '    float t = time;',\n            '    // 位置情報の取り出し',\n            '    vec4 tmpPos = texture2D( texturePosition, uv );',\n            '    vec3 pos = tmpPos.xyz;',\n            '    // ベクトルの取り出し',\n            '    vec4 tmpVel = texture2D( textureVelocity, uv );',\n            '    vec3 vel = tmpVel.xyz;',\n            '    // 最初の位置',\n            '    vec4 offsetV = texture2D( offsetValue, uv);',\n            '    vec3 offset = offsetV.xyz;',\n            '    float speed = 0.05;',\n            '    float  scalex = time  * speed + 0.1365143;',\n            '    float  scaley = time  * speed +   1.21688;',\n            '    float  scalez = time  * speed +    1.5564;',\n            '    float _scale = snoise(pos)*0.1;',\n            '    //float _scale = 0.04;',\n            '    vec3 n = normalize(translate) + normalize(pos);',\n            '    //vec3 n = normalize(translate)+*normalize(pos);',\n            '    vel.x=snoise(vec3(pos.x*scale, pos.y*scale,time*scalex+offsetX));',\n            '    vel.y=snoise(vec3(pos.x*scale, pos.y*scale,time*scaley+offsetY));',\n            '    vel.z=snoise(vec3(pos.x*scale, pos.y*scale,time*scalez+offsetZ));',\n            '    vel += n*1.0; //vel.x += normalize(translate).x;',\n            '    vel.z +=1.0; float addZ = 0.5;',\n            '    // ノイズの値を位置情報から生成',\n            '    //if(reset == 1.0){vel = vec3(0.0,0.0,0.0); addZ = 0.0;}',\n            '    gl_FragColor = vec4( vec3(vel.x,vel.y,vel.z+addZ), 1.0 );',\n            '}',\n\n\n        ].join('\\n')\n};\n\nvar particleShader_frame =\n{\n    vertexShader :\n        [\n            '// For PI declaration:',\n            '#include <common>',\n            'uniform sampler2D texturePosition;',\n            'uniform sampler2D textureVelocity;',\n            'uniform float cameraConstant;',\n            'uniform float density;',\n            'varying vec2 vUv;',\n            'uniform float radius;',\n            'void main() {',\n            '    // 位置情報の取り出し',\n            '    vec4 posTemp = texture2D( texturePosition, uv );',\n            '    vec3 pos = posTemp.xyz;',\n            '    vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 );',\n            '    gl_PointSize = 0.5 * cameraConstant / ( - mvPosition.z );',\n            '    vUv = uv;',\n            '    gl_Position = projectionMatrix * mvPosition;',\n            '}',\n\n        ].join('\\n'),\n    fragmentShader :\n        [\n            'varying vec4 vColor;',\n            'uniform sampler2D texture;',\n            'varying vec2 vUv;',\n            'uniform float alpha;',\n            'uniform vec3 color;',\n            'vec3 HUEtoRGB(float H){',\n            '    H = mod(H,1.0);',\n            '    float R = abs(H * 6.0 - 3.0) - 1.0;',\n            '    float G = 2.0 - abs(H * 6.0 - 2.0);',\n            '    float B = 2.0 - abs(H * 6.0 - 4.0);',\n            '    return clamp(vec3(R,G,B),0.0,1.0);',\n            '}',\n            'vec3 HSLtoRGB(vec3 HSL){',\n            '    vec3 RGB = HUEtoRGB(HSL.x);',\n            '    float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;',\n            '    return (RGB - 0.5) * C + HSL.z;',\n            '}',\n            'void main() {',\n            '    float size = 0.5;',\n            '    //vec4 diffuseColor = texture2D( map, vUv );',\n            '    float f = length( gl_PointCoord - vec2( size, size ) );',\n            '    if ( f > size ) {',\n            '        discard;',\n            '    }',\n            '     //vec3 _color = texture2D( texture, vUv ).rgb;',\n            '   //gl_FragColor = vec4( _color, 1.0 );',\n            '    gl_FragColor =vec4(color.xyz,1.0);',\n            '}',\n\n        ].join('\\n')\n};\n\n\nclass GPGPUParticle_frame {\n\n    private WIDTH:number;\n    private geometry:any;\n    private PARTICLES:number;\n\n\n\n    private gpuCompute:any;\n    private velocityVariable:any;\n    private positionVariable:any;\n    private offsetVariable:any;\n    private velocityUniforms:any;\n    private positionUniforms:any;\n    private offsetUniforms:any;\n    private particleUniforms:any;\n\n    private scene:THREE.Scene;\n    private camera:THREE.Camera;\n    private renderer:THREE.Renderer;\n    private position:any;\n    private boxWidth:number;\n    public startUpdate:boolean;\n    private particle:any;\n\n    private boxMaterial:THREE.Material;\n    private boxGeomery:THREE.Geometry;\n    private boxMesh:THREE.Mesh;\n    private color:THREE.Color;\n    private boxRemove:boolean;\n    private PARTICLE_NUM:number = 300;\n    private group:THREE.Group;\n    public rotation:any;\n\n    private time:number = 0.0;\n    private isSpeedDown:Boolean = false;\n\n    private HEIGHT:any;\n\n\n\n\n    constructor(scene, camera, renderer,width,height,position,color)\n    {\n\n        this.WIDTH = width;\n        this.HEIGHT = height;\n        this.PARTICLES =  this.PARTICLE_NUM * this.PARTICLE_NUM*5;\n\n        this.scene = scene;\n        this.camera = camera;\n        this.renderer = renderer;\n        this.color = color;\n        this.group = new THREE.Group();\n        this.group.position.set(position.x,position.y,position.z);\n        this.position = this.group.position;\n        this.rotation = this.group.rotation;\n        this.initComputeRenderer();\n        this.initPosition();\n        this.createBox();\n        this.boxRemove = false;\n    }\n\n    private createBox()\n    {\n        this.boxGeomery = new THREE.BoxGeometry(this.WIDTH,this.HEIGHT,10,1,1);\n        // var color = new THREE.Color(0xBF53F8);\n\n        this.boxMaterial = new THREE.MeshLambertMaterial({\n            color:this.color.getHex(),\n            wireframe:false,\n            transparent:true,\n            opacity:1.0\n        });\n        this.boxMesh = new THREE.Mesh(this.boxGeomery,this.boxMaterial);\n        this.group.add(this.boxMesh)\n        // this.scene.add(this.boxMesh);\n    }\n\n\n    private initComputeRenderer()\n    {\n        // 画面サイズだけGPU Rendererを生成\n        this.gpuCompute = new GPUComputationRenderer( this.WIDTH, this.WIDTH, this.renderer );\n        // 位置情報用のテクスチャ\n        var dtPosition = this.gpuCompute.createTexture();\n        // パーティクルごとの移動方向を保存するテクスチャ\n        var dtVelocity = this.gpuCompute.createTexture();\n        // noiseに使うoffset\n        var dtOffset = this.gpuCompute.createTexture();\n\n        // おまじない\n        this.fillTextures(dtPosition, dtVelocity,dtOffset);\n\n        // shader Programの登録\n        this.velocityVariable = this.gpuCompute.addVariable( \"textureVelocity\",computeShaderVelocity_frame.shader, dtVelocity );\n        this.positionVariable = this.gpuCompute.addVariable( \"texturePosition\", computeShaderPosition_frame.shader, dtPosition );\n        this.offsetVariable = this.gpuCompute.addVariable( \"offsetValue\", offsetValueShader_frame.shader, dtOffset );\n\n\n        this.gpuCompute.setVariableDependencies( this.velocityVariable, [ this.positionVariable, this.velocityVariable, this.offsetVariable ] );\n        this.gpuCompute.setVariableDependencies( this.positionVariable, [ this.positionVariable, this.velocityVariable, this.offsetVariable ] );\n        this.gpuCompute.setVariableDependencies( this.offsetVariable,   [ this.positionVariable, this.velocityVariable, this.offsetVariable ] );\n\n\n        // uniform変数の登録？\n        this.velocityUniforms = this.velocityVariable.material.uniforms;\n        this.offsetUniforms   = this.offsetVariable.material.uniforms;\n        this.positionUniforms = this.positionVariable.material.uniforms;\n        this.velocityUniforms.time = { value: 1.0 };\n        this.velocityUniforms.reset= {value:0.0};\n        this.positionUniforms.alpha = { value: 1.0 };\n        this.positionUniforms.time = { value: 0.0 };\n        this.positionUniforms.reset = { value: 0.0 };\n        var seed = 0.1;\n        this.velocityUniforms.offseX = {value: Math.random()*seed};\n        this.velocityUniforms.offseY = {value: Math.random()*seed};\n        this.velocityUniforms.offseZ = {value: Math.random()*seed};\n        this.velocityUniforms.scale = {value: (0.01+Math.random()*0.01-0.005)};\n        this.velocityUniforms.translate = {value: this.position};\n\n        var error = this.gpuCompute.init();\n        if ( error !== null ) {\n            console.error( error );\n        }\n\n    }\n    private initPosition()\n    {\n        // particleの初期位置を決める\n        this.geometry = new THREE.BufferGeometry();\n        var positions = new Float32Array( this.PARTICLES * 3 );\n        var p = 0;\n\n        // 一旦0でうめる。texturePositionの値を参照するためとりあえず埋めれば良い。\n        for ( var i = 0; i < this.PARTICLES; i++ ) {\n            // x\n            positions[ p++ ] = 0;\n            // y\n            positions[ p++ ] = 0;\n            // z\n            positions[ p++ ] = 0;\n        }\n\n        // テクスチャーに保存した情報を取り出すためにvec2(x,y)座標を記録\n        var uvs = new Float32Array( this.PARTICLES * 2 );\n        p = 0;\n        for ( var j = 0; j < this.WIDTH; j++ ) {\n            for ( var i = 0; i < this.WIDTH; i++ ) {\n                uvs[ p++ ] = i / ( this.WIDTH - 1 );\n                uvs[ p++ ] = j / ( this.WIDTH - 1 );\n            }\n        }\n\n\n        // vertex-shaderに登録\n        this.geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n        this.geometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\n\n\n\n        var colorVec =  new THREE.Vector3(this.color.r,this.color.g,this.color.b);\n        // particleの位置と移動方向を収めるuinform変数の初期化\n        this.particleUniforms = {\n            map: { value: new THREE.TextureLoader().load( \"./textures/circle.png\" ) },\n            texturePosition: { value: null },\n            textureVelocity: { value: null },\n            alpha:{value:1.0},\n            color: {value: colorVec},\n            cameraConstant: { value: this.getCameraConstant(this.camera) },\n            texture:    { value: new THREE.TextureLoader().load( \"textures/sea02.jpg\" ) }\n        };\n\n        // ShaderMaterial の設定\n        var material = new THREE.ShaderMaterial( {\n            uniforms:       this.particleUniforms,\n            vertexShader:   particleShader_frame.vertexShader,\n            fragmentShader: particleShader_frame.fragmentShader,\n            transparent: true\n        });\n        // おまじない\n        material.extensions.drawBuffers = true;\n        // Points オブジェクトを生成\n        this.particle = new THREE.Points( this.geometry, material );\n        this.particle.matrixAutoUpdate = false;\n        this.particle.updateMatrix();\n        this.particle.frustumCulled = false;\n        // シーンに追加\n        // particles.position.set(50,5,0);\n        this.group.add(this.particle);\n        // group.translateX(this.position.x);\n        // group.translateY(this.position.y);\n        // group.translateZ(this.position.z);\n\n        //particles.position.set(this.position.x,this.position.y,this.position.z);\n        this.scene.add( this.group );\n\n    }\n\n    private fillTextures(texturePosition, textureVelocity,offsetValue)\n    {\n        // 場所と移動方向を保存するテクスチャーの初期化\n        var posArray = texturePosition.image.data;\n        var velArray = textureVelocity.image.data;\n        var offsetArray = offsetValue.image.data;\n\n        for ( var k = 0, kl = posArray.length; k < kl; k += 4 ) {\n            // Position\n            var x, y, z;\n            var width = this.WIDTH;\n            var height = this.HEIGHT;\n\n            x = Math.random()*width-width/2;\n            //z = Math.random()*width-width/2;\n            z = 0.0;\n            y =Math.random()*height-height/2;\n            // Fill in texture values\n            posArray[ k + 0 ] = x;\n            posArray[ k + 1 ] = y;\n            posArray[ k + 2 ] = z;\n            posArray[ k + 3 ] = 1.0;\n            velArray[ k + 0 ] = Math.random()*0.2-0.1;\n            velArray[ k + 1 ] = Math.random()*0.2-0.1;\n            velArray[ k + 2 ] = Math.random()*0.2-0.1;\n            velArray[ k + 3 ] = Math.random()*0.2-0.1;\n\n            offsetArray[ k + 0 ] = x;\n            offsetArray[ k + 1 ] = y;\n            offsetArray[ k + 2 ] = z;\n            offsetArray[ k + 3 ] = 0;\n        }\n\n    }\n\n\n\n    public getCameraConstant(camera) {\n        // カメラ情報を計算。\n        return window.innerHeight / ( Math.tan( THREE.Math.DEG2RAD * camera.fov ) / camera.zoom );\n\n    }\n\n    public resize() {\n\n        this.particleUniforms.cameraConstant.value = this.getCameraConstant(this.camera);\n    }\n\n    public setPosition(pos)\n    {\n        this.group.position.set(pos.x,pos.y,pos.z)\n\n    }\n\n    public enableUpdate()\n    {\n        this.startUpdate = true;\n    }\n\n    public enableSpeedDown()\n    {\n        this.isSpeedDown = true;\n    }\n\n    public disableSpeedDown()\n    {\n        this.isSpeedDown = false;\n    }\n\n    public initUpdate()\n    {\n        this.time = 0.0;\n        this.positionUniforms.reset.value = 1.0;\n        this.velocityUniforms.reset.value = 1.0;\n        this.boxMaterial.opacity = 1.0;\n        this.boxMesh.material.color.set(0.05,0.05,0.05);\n        // this.startUpdate = false;\n        // this.particleUniforms.alpha.value = 0.0;\n        this.velocityUniforms.time.value = 0.0;\n        this.positionUniforms.time.value = 0.0;\n    }\n\n    public getTime()\n    {\n        return this.positionUniforms.time.value = Math.abs(Math.sin(this.time));\n    }\n\n    private radian:number = 0.0;\n\n    public update(time)\n    {\n\n\n\n        if(this.startUpdate)\n        {\n            this.time += 0.01;\n            var speed = 0.0;\n\n\n            if(this.isSpeedDown)\n            {\n                speed= 0.1;\n            }\n            else\n            {\n                speed= 1.0;\n            }\n\n\n\n\n            if(this.particleUniforms.alpha.value >= 0.0) {\n\n\n                console.log('update');\n\n                // gpuComputeをアップデート\n                this.gpuCompute.compute();\n                // 前のフレームの情報でパーティクルの位置情報を上書き\n                this.particleUniforms.texturePosition.value = this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture;\n                // 前のフレームの情報でパーティクルの移動方向情報を上書き\n                this.particleUniforms.textureVelocity.value = this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;\n                this.positionUniforms.alpha.value = this.particleUniforms.alpha.value;\n\n                if(this.positionUniforms.reset.value == 1.0)\n                {\n                    this.positionUniforms.reset.value = 0.0;\n                }\n\n                if(time != undefined)\n                {\n\n                    speed = time;\n                }\n\n\n                this.velocityUniforms.time.value = Math.abs(speed);\n                this.positionUniforms.time.value = Math.abs(speed);\n\n\n\n\n            } else {\n                // this.scene.remove(this.particle);\n                // this.particle.geomery.dispose();\n                // this.particle.material.dispose();\n            }\n\n\n            if(this.boxMaterial.opacity > 0.0)\n            {\n\n                this.boxMesh.material.opacity = 0.3;\n                this.boxMesh.material.color.setHex(0xffffff);\n                //console.log(this.boxMaterial.opacity);\n            }\n\n\n        }\n\n        if(this.positionUniforms.reset.value == 1.0){\n            this.positionUniforms.reset.value == 0.0;\n            this.velocityUniforms.reset.value == 0.0;\n            this.particleUniforms.alpha.value = 0.0;\n        }\n\n    }\n\n}\n\n// ************************ main scene ************************ //\n\n\nclass Frame {\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n\n    public UPDATE:boolean = true;\n    public END:boolean = false;\n\n    public renderer:THREE.Renderer;\n    public particles:any[] = [];\n    public boxs:any[] = [];\n    private controls:any;\n    private isUpdate:boolean = false;\n\n    private time_scene01:number = 0.0;\n    private time_scene02:number = 0.0;\n    private scene01FramePositions:Object;\n    // private scene01FramePositions_next:any[] = [];\n    private rotattion:Object;\n    private radian:Object;\n    private frame_boxs:any[] = [];\n    private speed:number = 0.0;\n    private scene01Update:Boolean = false;\n    private scene02Update:Boolean = false;\n    private scene01Speed:Object;\n    private scene01FrameVector:any[];\n    private scene01CameraRotation:any[];\n    private clickCount:number = 0;\n    private isSpeedDown:Boolean = false;\n\n    constructor(renderer) {\n\n        this.renderer = renderer;\n        this.createScene();\n\n    }\n\n\n\n\n    private createScene(){\n\n        this.radian = {value:0.0};\n\n        this.scene = new THREE.Scene();\n        // this.scene.fog = new THREE.Fog(0x000000,-500,3000);\n        this.scene.add(new THREE.AmbientLight(0xffffff,0.8));\n\n\n\n\n        this.scene01FramePositions ={\n            now:\n                [\n                    new THREE.Vector3(-200,-500,3),\n                    new THREE.Vector3(0,500,3),\n                    new THREE.Vector3(200,-500,3)\n\n                ],\n            next:\n                [\n                    new THREE.Vector3(-200,0,3),\n                    new THREE.Vector3(0,0,3),\n                    new THREE.Vector3(200,0,3)\n\n                ];\n    };\n\n\n\n        var xRotateRange = Math.PI/2;\n        this.rotattion = {\n            now:\n                [\n                    new THREE.Vector3(0,0,0),\n                    new THREE.Vector3(0,0,0),\n                    new THREE.Vector3(0,0,0)\n                ],\n            next:\n                [\n                    new THREE.Vector3(Math.random()*Math.PI/2*-Math.PI/4, Math.random()*Math.PI*-0.5,Math.random()*Math.PI/2*-Math.PI/4),\n                    new THREE.Vector3(Math.random()*Math.PI/2*-Math.PI/4,Math.random()*Math.PI/2-Math.PI/4,Math.random()*Math.PI/2*-Math.PI/4),\n                    new THREE.Vector3(Math.random()*Math.PI/2*-Math.PI/4,Math.random()*Math.PI*0.5,Math.random()*Math.PI/2*-Math.PI/4)\n                ]\n        };\n\n        this.scene01FrameVector =\n            [\n                new THREE.Vector3(-0.5,0,0.0),\n                new THREE.Vector3(0.0,0,0.0),\n                new THREE.Vector3(0.5,0,0.0)\n            ];\n\n        this.scene01CameraRotation = new THREE.Vector3(Math.random()*Math.PI-Math.PI/2,Math.random()*Math.PI-Math.PI/2,-Math.random()*Math.PI/2).normalize();\n\n\n        this.scene01Speed =\n        {\n            now:5.0,\n            slow:0.01\n\n        };\n\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 110, window.innerWidth/window.innerHeight, 0.1, 10000 );\n        this.camera.position.z = 300;\n\n        var textureLoader = new THREE.TextureLoader();\n\n        var image = textureLoader.load( \"textures/frame.jpg\" );\n\n        var scale = 0.7;\n        var geomery = new THREE.PlaneGeometry(1000,800,21,21);\n        var material = new THREE.MeshPhongMaterial({\n            map:image\n        });\n\n        var mesh = new THREE.Mesh(geomery,material);\n        // this.scene.add(mesh);\n\n        var wirematerial = new THREE.MeshBasicMaterial({\n            color:0x000000,\n            wireframe:true\n        });\n\n\n\n\n\n\n\n        var frameA = new THREE.PlaneGeometry(2.5,3.3,2,2);\n        var blackMaterial = new THREE.MeshBasicMaterial({\n            color: 0x000000,\n            // transparent:true,\n            // opacity:0.5\n        });\n\n        var frameAMesh = new THREE.Mesh(frameA,blackMaterial);\n        frameAMesh.position.x -=3;\n        frameAMesh.position.y = 1.3;\n\n\n        var particleposition = new THREE.Vector3(-200,0,3);\n        var wireposition = new THREE.Vector3(-200,0,0);\n        var color = new THREE.Color(0.05,0.05,0.05);\n\n        this.particles.push(new GPGPUParticle_frame(this.scene,this.camera,this.renderer,140,210,particleposition,color));\n        this.boxs.push(new WireBox(this.scene,140,2,210,wireposition,color,false));\n\n        var particlepositionCenter = new THREE.Vector3(0,0,3);\n        var wirepositionCenter = new THREE.Vector3(0,0,3);\n        this.boxs.push(new WireBox(this.scene,140,2,210,wirepositionCenter,color,false));\n        this.particles.push(new GPGPUParticle_frame(this.scene,this.camera,this.renderer,140,210,particlepositionCenter,color));\n\n\n        var particlepositionRight = new THREE.Vector3(200,0,3);\n        var wirepositionRight = new THREE.Vector3(200,0,3);\n        this.boxs.push(new WireBox(this.scene,140,2,210,wirepositionRight,color,false));\n        this.particles.push(new GPGPUParticle_frame(this.scene,this.camera,this.renderer,140,210,particlepositionRight,color));\n\n\n\n\n        // if(!this.scene01 && this.scene02)\n        // {\n        //\n        // }\n\n        for(var i = 0; i < this.boxs.length; i++)\n        {\n            var x = this.scene01FramePositions.now[i].x;\n            var y = this.scene01FramePositions.now[i].y;\n            var z = this.scene01FramePositions.now[i].z;\n\n            this.boxs[i].position.set(x,y,z);\n            this.particles[i].setPosition(this.scene01FramePositions.now[i]);\n        }\n\n    }\n\n    private initPosition()\n    {\n\n\n        this.scene01FramePositions ={\n            now:\n                [\n                    new THREE.Vector3(-200,-200,3),\n                    new THREE.Vector3(0,200,3),\n                    new THREE.Vector3(200,-200,3)\n\n                ],\n            next:\n                [\n                    new THREE.Vector3(-200,0,3),\n                    new THREE.Vector3(0,0,3),\n                    new THREE.Vector3(200,0,3)\n\n                ];\n    };\n\n\n\n        var xRotateRange = Math.PI/2;\n        this.rotattion = {\n            now:\n                [\n                    new THREE.Vector3(0,0,0),\n                    new THREE.Vector3(0,0,0),\n                    new THREE.Vector3(0,0,0)\n                ],\n            next:\n                [\n                    new THREE.Vector3(\n                        Math.random()*Math.PI/2*-Math.PI/4,\n                        -Math.random()*Math.PI,\n                        Math.random()*Math.PI/2*-Math.PI/4),\n                    new THREE.Vector3(\n                        Math.random()*Math.PI/2*-Math.PI/4,\n                        Math.random()*Math.PI*2-Math.PI/2,\n                        Math.random()*Math.PI/2*-Math.PI/4),\n                    new THREE.Vector3(\n                        Math.random()*Math.PI/2*-Math.PI/4,\n                        Math.random()*Math.PI,\n                        Math.random()*Math.PI/2*-Math.PI/4)\n                ]\n        };\n\n        this.scene01FrameVector =\n            [\n                new THREE.Vector3(-0.5,0,0.0),\n                new THREE.Vector3(0.0,0,0.0),\n                new THREE.Vector3(0.5,0,0.0)\n            ];\n\n        this.scene01CameraRotation = new THREE.Vector3(Math.random()*Math.PI-Math.PI/2,Math.random()*Math.PI-Math.PI/2,-Math.random()*Math.PI/2).normalize();\n\n\n        this.scene01Speed =\n        {\n            now:3.0,\n            slow:0.1,\n\n        };\n\n\n\n\n        for(var i = 0; i < this.boxs.length; i++)\n        {\n            var x = this.scene01FramePositions.now[i].x;\n            var y = this.scene01FramePositions.now[i].y;\n            var z = this.scene01FramePositions.now[i].z;\n\n            this.boxs[i].position.set(x,y,z);\n            this.particles[i].setPosition(this.scene01FramePositions.now[i]);\n\n            this.particles[i].rotation.set(0,0,0);\n            this.boxs[i].rotation.set(0,0,0);\n            this.particles[i].initUpdate();\n\n        }\n\n        this.time_scene02 = 0.0;\n        this.time_scene01 = 0.0;\n\n\n    }\n    public update() {\n\n        this.renderer.setClearColor ( 0xffffff, 1.0 );\n\n\n        if (this.scene02Update) {\n            this.time_scene01 += 0.02;\n\n\n            if (Math.sin(this.time_scene01) < 0.0) {\n                this.speed += (0.001 - this.speed) * 0.1;\n\n            } else {\n                this.speed += (0.045 - this.speed) * 0.1;\n                // this.tween\n            }\n\n            this.scene01Speed.now += (this.scene01Speed.slow - this.scene01Speed.now) * 0.1;\n\n            for (var i = 0; i < this.boxs.length; i++) {\n\n\n                if (Math.sin(this.time_scene01) < 0.0) {\n                    this.particles[i].enableSpeedDown();\n\n                } else {\n                    this.speed += (0.015 - this.speed) * 0.1;\n                    this.particles[i].disableSpeedDown();\n                }\n\n\n                var framePos = this.boxs[i].position;\n                var speed = 0.1;\n                var next = this.scene01FramePositions.next[i];\n                var now = this.scene01FramePositions.now[i];\n                if (Math.abs(this.boxs[i].position.y - next.y) > 1.0) {\n\n                    // console.log(now);\n                    now.x += (next.x - now.x) * speed;\n                    now.y += (next.y - now.y) * speed;\n                    now.z += (next.z - now.z) * speed;\n\n                    var x = now.x;\n                    var y = now.y;\n                    var z = now.z;\n\n                    this.boxs[i].position.set(x, y, z);\n                    this.particles[i].setPosition(now);\n\n                } else {\n\n\n                    var next = this.rotattion.next[i];\n                    var now = this.rotattion.now[i];\n                    var speed = 0.25;\n                    // console.log(now);\n                    now.x += (next.x - now.x) * speed;\n                    now.y += (next.y - now.y) * speed;\n                    now.z += (next.z - now.z) * speed;\n\n                    var x = now.x;\n                    var y = now.y;\n                    var z = now.z;\n\n                    this.boxs[i].rotation.set(x, y, z);\n                    this.particles[i].rotation.set(x,y,z);\n\n\n\n\n                    var pos = new THREE.Vector3(x, y, z).normalize();\n                    this.scene01FrameVector[i].multiplyScalar(this.scene01Speed.now);\n                    this.boxs[i].position.add(this.scene01FrameVector[i]);\n                    this.particles[i].position.add(this.scene01FrameVector[i]);\n                    this.particles[i].enableUpdate();\n                    this.particles[i].update();\n\n                    this.camera.position.x = 500 * Math.cos(this.time_scene01 * 0.1 + Math.PI / 2);\n                    this.camera.position.y = 200 * Math.sin(this.time_scene01 * 0.1);\n                    var z = 700 * Math.sin(this.time_scene01 * 0.1 + Math.PI / 2);\n                    this.camera.position.z += (z - this.camera.position.z) * 0.01;\n                    this.camera.position.add(this.scene01CameraRotation.multiplyScalar(this.scene01Speed.now * 0.4));\n                    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\n                }\n\n\n            }\n\n            if (this.scene01Speed.now < 0.015) {\n                // this.initPosition();\n                // this.scene01Update = false;\n                // this.clickCount = 0;\n                // for(var i = 0; i < this.boxs.length; i++)\n                // {\n                //     console.log(this.boxs[i].position);\n                //     console.log(this.particles[i].position);\n                // }\n                this.time_scene01 += 0.001;\n\n\n                // this.camera.position.x = x;\n                // this.camera.position.z = z;\n                this.camera.position.add(this.scene01CameraRotation.multiplyScalar(this.scene01Speed.now));\n                // this.camera.position.z -= 0.5;\n\n            }\n\n        }\n\n\n        if (this.scene01Update) {\n            this.time_scene02 += 0.01;\n\n\n            if (Math.sin(this.time_scene02) < 0.0) {\n                this.speed += (0.001 - this.speed) * 0.1;\n\n            } else {\n                this.speed += (0.015 - this.speed) * 0.1;\n                // this.tween\n            }\n\n            this.radian.value += this.speed;\n\n            for (var i = 0; i < this.particles.length; i++) {\n                this.particles[i].update();\n\n                if (Math.sin(this.time_scene02) < 0.0) {\n                    this.particles[i].enableSpeedDown();\n\n                } else {\n                    this.particles[i].disableSpeedDown();\n                }\n\n                // if(Math.abs(this.particles[i].position.y) > 200 )\n                {\n                    if (i == 1) {\n                        this.particles[i].position.y += (100 - this.particles[i].position.y) * 0.1;\n                        this.boxs[i].position.y = this.particles[i].position.y;\n                    } else {\n                        this.particles[i].position.y += (-100 - this.particles[i].position.y) * 0.1;\n                        this.boxs[i].position.y = this.particles[i].position.y;\n                    }\n\n                    this.scene01FramePositions.now[i].set(this.boxs[i].position.x, this.boxs[i].position.y, this.boxs[i].position.z);\n\n                    this.time_scene01 = this.time_scene02;\n\n                    // }\n\n                }\n\n                //var radian = Math.abs(Math.sin(this.time_scene01));\n                var x = 300 * Math.cos(this.radian.value + Math.PI / 2);\n                var z = 300 * Math.sin(this.radian.value + Math.PI / 2);\n\n                this.camera.position.set(x, 0, z);\n                this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n            }\n\n\n            //console.log(this.END);\n            if (this.UPDATE == false) {\n                //this.scene.remove(this.scene.children[0]);\n                this.remove();\n                if (this.scene.children.length == 0) {\n                    this.END = true;\n                }\n\n            }\n\n\n        }\n\n    }\n\n    public keyUp()\n    {\n\n    }\n    //\n    // public keyDown(event)\n    // {\n    //     console.log(event)\n    //     this.click();\n    // }\n    //\n    public click()\n    {\n\n\n\n\n        // if(this.clickCount == 1)\n        // {\n        //     this.scene01Update = false;\n        //     this.scene02Update = true;\n        // }\n        //\n        // if(this.clickCount == 0)\n        // {\n        //\n        //     this.scene01Update = true;\n        //     this.scene02Update = false;\n        //     for(var i = 0; i < this.particles.length; i++)\n        //     {\n        //         this.particles[i].enableUpdate();\n        //     }\n        // }\n        //\n        // if(this.clickCount >= 3)\n        // {\n        //     // this.remove();\n        //     this.initPosition();\n        //     this.scene01Update = true;\n        //     this.scene02Update = false;\n        //     for(var i = 0; i < this.particles.length; i++)\n        //     {\n        //         // this.particles[i].enableUpdate();\n        //         this.particles[i].initUpdate();\n        //     }\n        //     this.clickCount = 0;\n        // } else {\n        //     this.clickCount++;\n        // }\n\n\n\n\n\n\n    }\n\n    public initOrbitControls()\n    {\n        this.controls = new THREE.OrbitControls(this.camera,this.renderer.domElement);\n        this.controls.enableKeys = false;\n    }\n\n    public keyDown(keyCode)\n    {\n\n        console.log(keyCode);\n        switch (keyCode){\n            case 190:\n                this.scene01Update = false;\n                this.scene02Update = true;\n                break;\n            case 82:\n                this.isSpeedDown = true;\n                break;\n        }\n\n        if(keyCode.code == \"Space\")\n        {\n            if(this.clickCount == 1)\n            {\n                this.scene01Update = false;\n                this.scene02Update = true;\n            }\n\n            if(this.clickCount == 0)\n            {\n\n                this.scene01Update = true;\n                this.scene02Update = false;\n                for(var i = 0; i < this.particles.length; i++)\n                {\n                    this.particles[i].enableUpdate();\n                }\n            }\n\n            if(this.clickCount >= 2)\n            {\n                // this.remove();\n                this.initPosition();\n                this.scene01Update = true;\n                this.scene02Update = false;\n                for(var i = 0; i < this.particles.length; i++)\n                {\n                    // this.particles[i].enableUpdate();\n                    this.particles[i].initUpdate();\n                }\n                this.clickCount = 0;\n            } else {\n                this.clickCount++;\n            }\n\n        }\n\n\n\n    }\n\n\n\n\n\n\n    public remove()\n    {\n\n\n        //console.log(this.scene.children);\n        while(this.scene.children.length != 0)\n        {\n            this.scene.remove(this.scene.children[0]);\n            if(this.scene.children[0] == THREE.Mesh){\n                this.scene.children[0].geometry.dispose();\n                this.scene.children[0].material.dispose();\n            }\n\n\n\n        };\n\n\n    }\n\n\n\n\n\n\n    public endEnabled()\n    {\n        this.UPDATE = false;\n    }\n\n\n\n\n\n}\n\n"]}