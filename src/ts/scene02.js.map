{"version":3,"file":"scene02.js","sourceRoot":"","sources":["scene02.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"typings/index.d.ts\" />\n\nclass TetTest{\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n    private Box:THREE.Mesh;\n    private timer:number = 0;\n    private renderer:THREE.WebGLRenderer;\n    private objs:THREE.Mesh[] = [];\n    private  group:THREE.Group;\n    private rotations:THREE.Vector3[] = [];\n    private planeGeo:THREE.PlaneGeometry;\n    private noise:Object;\n    private time:number;\n\n    private tetValues:Object[] = [];\n\n    constructor(renderer:THREE.WebGLRenderer) {\n\n        // renderer.setClearColor(0xffffff);\n        this.renderer = renderer;\n        this.createScene();\n    }\n\n    // シーンを作る。ここでオブジェクトを格納していく。\n    private createScene(){\n\n        this.time = 0.0;\n        this.noise = new SimplexNoise();\n\n        // シーンを作る\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.FogExp2( 0xf98989, 0.002 );\n        this.renderer.setClearColor(this.scene.fog.color);\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 );\n        this.camera.position.z = 100;\n        this.camera.position.y = 20;\n\n        let light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( 1, 1, 1 );\n        this.scene.add( light );\n        let light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( -1, -1, -1 );\n        this.scene.add( light );\n\n        let light = new THREE.SpotLight( 0xf8ffc0,1.0 );\n        light.position.set( 0, 100, 0 );\n        this.scene.add( light );\n\n        let light = new THREE.SpotLight( 0xffffff,1.0 );\n        light.position.set( 0, 90, 0 );\n        this.scene.add( light );\n\n\n        light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( -1, -1, -1 );\n        this.scene.add( light );\n\n        // light = new THREE.AmbientLight( 0xffffff );\n        // this.scene.add( light );\n\n\n        this.group = new THREE.Group();\n\n\n        let radian = 0.0;\n        let _radius = 150;\n        let radius = 150;\n        for(var i = 0; i < 50; i++) {\n\n            let tetGeometry = new THREE.CylinderGeometry( 0, 18+10*Math.random()-5, 27+10*Math.random()-5, 4, 1 );\n            let tetMaterial = new THREE.MeshLambertMaterial({\n                color:0xffffff,\n                shading:THREE.FlatShading\n            });\n\n            radius = _radius +Math.random()*100 - 50;\n\n            let tetMesh = new THREE.Mesh(tetGeometry, tetMaterial);\n\n            radian += 0.1+Math.random()*0.1;\n            let x = Math.cos(radian)*radius;\n            let z = Math.sin(radian)*radius;\n            let y = Math.sin(Math.random()*Math.PI*2) * 10;\n            tetMesh.position.set(x,y,z);\n\n            var r = new THREE.Vector3(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2);\n            this.rotations.push(r);\n            tetMesh.rotation.set(r.x,r.y,r.z);\n\n            this.objs.push(tetMesh);\n            this.group.add(tetMesh);\n\n            this.tetValues.push({\n                radian:radian,\n                radius:radius,\n                pos:tetMesh.position\n\n            })\n        }\n\n        this.group.rotateZ(0.6);\n        this.group.rotateX(0.3);\n        // this.scene.add(this.group);\n\n\n        this.planeGeo = new THREE.PlaneGeometry(5000,5000,20,20);\n        // let planeMat = new THREE.MeshLambertMaterial({\n        //     color:0xffe912,\n        //     wireframe:false,\n        //     side:THREE.DoubleSide,\n        //     transparent:true,\n        //\n        //     shininess: 35,\n        //     specular: 0xffffff,\n        //     shading: THREE.SmoothShading,\n        //     blending:THREE[\"MultiplyBlending\"]\n        // });\n\n        var planeMat = new THREE.MeshPhongMaterial( {\n            color: 0xff5b32,\n            shininess: 5,\n            specular: 0xf8ffc0,\n            shading: THREE.SmoothShading,\n            side:THREE.DoubleSide,\n            transparent:true,\n            blending:THREE[\"MultiplyBlending\"]\n        } );\n\n        let planeMesh = new THREE.Mesh(this.planeGeo,planeMat);\n        this.scene.add(planeMesh);\n\n        planeMesh.position.y = -40;\n        planeMesh.rotateX(Math.PI/2);\n        let controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n\n\n        // let planeMat_wire = new THREE.MeshLambertMaterial({\n        //     color:0x000000,\n        //     wireframe:true,\n        //     side:THREE.DoubleSide,\n        //     transparent:true,\n        //     opacity:0.7,\n        //     blending:THREE[\"MultiplyBlending\"]\n        // });\n        // let planeMesh_wire = new THREE.Mesh(this.planeGeo,planeMat_wire);\n        // planeMesh_wire.rotateX(-Math.PI/2);\n        // planeMesh_wire.position.z = -10;\n        // this.scene.add(planeMesh_wire);\n\n    }\n\n\n    // ワンフレームごとの処理\n    public update() {\n\n        for(var i = 0; i < this.rotations.length; i++)\n        {\n            this.rotations[i].x += 0.001;\n            this.rotations[i].y += 0.001;\n            this.rotations[i].z += 0.001;\n\n            this.objs[i].rotation.set(this.rotations[i].x,this.rotations[i].y,this.rotations[i].z);\n\n            this.tetValues[i].radian += 0.001;\n            let radisu  =Math.sin(this.timer*100)*100 + this.tetValues[i].radius;\n\n            let x = Math.cos(this.tetValues[i].radian)*radisu;\n            let z = Math.sin(this.tetValues[i].radian)*radisu;\n            // let y = Math.sin(Math.random()*Math.PI*2) * 10;\n\n            this.objs[i].position.x = x;\n            this.objs[i].position.z = z;\n\n\n\n            var noise = this.noise.noise3D(this.objs[i].position.x*0.01,this.objs[i].position.y*0.01,this.time*0.01+this.objs[i].position.z*0.01);\n\n            this.objs[i].position.y = noise*20;\n\n\n        }\n\n\n\n\n        this.time += 0.003;\n\n        for(var i = 0; i < this.planeGeo.vertices.length;i++)\n        {\n            let vert = this.planeGeo.vertices[i];\n            var value = this.noise.noise3D(vert.x*0.5,vert.y*0.5,this.time);\n            this.planeGeo.vertices[i].z = value*30.0;\n        }\n        this.planeGeo.verticesNeedUpdate = true;\n    }\n\n\n}\n\n\n"]}