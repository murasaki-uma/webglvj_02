{"version":3,"file":"BigBox.js","sourceRoot":"","sources":["BigBox.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"typings/index.d.ts\" />\n\n\nimport SphereBufferGeometry = THREE.SphereBufferGeometry;\nclass LineBoxScene {\n\n    public scene: THREE.Scene;\n    public camera: THREE.Camera;\n\n    public UPDATE:boolean = true;\n    public END:boolean = false;\n    private Box:Object;\n    private Boxs:Object[] = [];\n    private renderer:THREE.WebGLRenderer;\n    private timer:number;\n    private lookAt:THREE.Vector3;\n\n    private isPlay:boolean = false;\n    private zNum:number;\n    private xNum:number;\n    private zStep:number;\n    private xStep:number;\n    private phi:number = Math.random()*Math.PI*2;\n    private theta:number = Math.random()*Math.PI*2;\n\n\n    private butterflyPosition:THREE.Vector3 = new THREE.Vector3(0,300,0);\n    private butterfly:THREE.Mesh = new THREE.Mesh();\n\n    constructor(renderer) {\n        this.renderer = renderer;\n\n        this.createScene();\n\n    }\n\n\n\n    private createScene(){\n\n\n        this.scene = new THREE.Scene();\n        this.timer = 0.0;\n        this.scene.fog = new THREE.Fog(0x000000,-500,3000);\n\n\n        // カメラを作成\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 10000 );\n        this.camera.position.z = 800;\n        this.camera.position.y = 500;\n        this.lookAt = new THREE.Vector3();\n        this.lookAt.set(this.camera.position.x,this.camera.position.y,this.camera.position.z);\n        this.lookAt.z +=  -500;\n        // this.camera.lookAt()\n        this.camera.lookAt(this.lookAt);\n\n        this.xStep = 400;\n        this.xNum = 4;\n        this.zStep = 200;\n        this.zNum = 13;\n        // for(var x = 0; x < this.xNum; x++)\n        // {\n        //     // for(var y = 0; y < 5; y++)\n        //     // {\n        //         for(var z = 0; z < this.zNum; z++)\n        //         {\n        //             var pos = new THREE.Vector3(x*this.xStep+50-(this.xStep*this.xNum/2-100),50,-z*this.zStep-150);\n        //             var box = new WierBox(this.scene,100,100,100,pos,new THREE.Color(255,255,255));\n        //             this.Boxs.push(box);\n        //\n        //         }\n        //\n        //\n        //     // }\n        //\n        // }\n\n\n        for(var i = 0; i < 15; i++)\n        {\n\n            var x = this.getRandom(-7,8) * 100+50;\n            var y = 50;\n            var z = this.getRandom(-14,0)*100+50-100;\n            var pos = new THREE.Vector3(x,y,z);\n            var box = new WierBox(this.scene,100,100,100,pos,new THREE.Color(255,255,255));\n            this.Boxs.push(box);\n\n\n        }\n\n\n        var size = 100000;\n        var step = 100;\n        var spehereWidth = 50;\n        var gridHelper = new THREE.GridHelper( size, step );\n        this.scene.add( gridHelper );\n        this.scene.position.x = 50;\n\n\n\n\n\n        var sphereGeo = new SphereBufferGeometry(spehereWidth,spehereWidth,6,6);\n        var spheremat = new THREE.MeshBasicMaterial(\n            {\n                color:0xffffff,\n                wireframe:true\n            });\n\n\n        this.butterfly = new THREE.Mesh(sphereGeo,spheremat);\n\n        this.butterfly.position.set(-spehereWidth,this.butterflyPosition.y,this.butterflyPosition.z);\n        this.scene.add(this.butterfly);\n\n\n\n\n\n        // それぞれの面の箱\n        var geometry = new THREE.BoxGeometry(100, 100, 100);\n//材質を配列で指定する(箱型なので6面分)\n        var materials = [\n            new THREE.MeshBasicMaterial({color: 0x00ff00}),\n            new THREE.MeshBasicMaterial({color: 0x00ff00}),\n            new THREE.MeshBasicMaterial({color: 0x0000ff}),\n            new THREE.MeshBasicMaterial({color: 0x0000ff}),\n            new THREE.MeshBasicMaterial({color: 0xff0000}),\n            new THREE.MeshBasicMaterial({color: 0xff0000})\n        ];\n//MeshFaceMaterialで材質を宣言\n        var material = new THREE.MeshFaceMaterial(materials);\n//オブジェクトの生成\n        var _mesh = new THREE.Mesh(geometry, material);\n//シーンへの追加\n        this.scene.add(_mesh);\n\n    }\n\n\n\n    public update() {\n        this.timer += 0.02;\n\n        //console.log(this.END);\n        if (this.UPDATE == false) {\n            //this.scene.remove(this.scene.children[0]);\n            this.remove();\n            if (this.scene.children.length == 0) {\n                this.END = true;\n            }\n\n        }\n\n        for(var i = 0; i < this.Boxs.length; i++)\n        {\n\n            //this.Boxs[i].update();\n\n            if(this.butterfly.position.z - this.Boxs[i].position.z <= -350)\n            {\n                // var p = this.Boxs[i].Obj.position;\n                this.Boxs[i].Obj.position.x = this.getRandom(-12,11) * 100+50;\n                // var y = 50;\n                this.Boxs[i].Obj.position.z -= 800- this.getRandom(-1,-8)*200;\n                // this.Boxs[i].setPosition(p.x,p.y,p.z);\n                this.Boxs[i].updateHeadVertex( 20+200*Math.sin(Math.random()*Math.PI) );\n            }\n        }\n\n        if(this.isPlay)\n        {\n            this.camera.position.z -=4;\n            this.butterfly.position.z -=4;\n\n            this.lookAt.set(this.camera.position.x,this.camera.position.y,this.camera.position.z);\n            this.lookAt.z +=  -500+50;\n            this.camera.lookAt(this.lookAt);\n\n            //(r sinsθ cosΦ, r cosθ, r sinθ sinΦ)\n            // this.phi += (Math.random()*0.02+Math.random()*0.02+Math.random()*0.02)/3;\n            // this.theta += (Math.random()*0.02+Math.random()*0.02+Math.random()*0.02)/3;\n            this.phi += 0.02;\n            this.theta += 0.02;\n            // var rad = Math.abs(this.butterfly.position.z - this.camera.position.z);\n            // var x = rad * Math.sin(this.theta) * Math.cos(this.phi);\n            // var y = rad * Math.cos(this.theta);\n            // var z = rad * Math.sin(this.theta) * Math.sin(this.phi);\n            // this.camera.position.set(x,y,z);\n            this.camera.position.x = Math.sin(this.phi)*20;\n            this.camera.position.y = 350+Math.sin(this.theta)*Math.sin(this.theta/2)*20;\n            this.camera.position.z +=Math.cos(this.phi);\n\n        }\n\n\n\n\n\n\n    }\n\n    public  initOrbitControls()\n    {\n        // this.controls = new THREE.OrbitControls(this.camera,this.renderer.domElement);\n        // this.controls.enableKeys = false;\n    }\n\n    public click()\n    {\n        this.isPlay = !this.isPlay;\n    }\n\n\n\n    public endEnabled()\n    {\n        this.UPDATE = false;\n    }\n\n    public resize()\n    {\n\n    }\n\n    public remove()\n    {\n\n\n        //console.log(this.scene.children);\n        while(this.scene.children.length != 0)\n        {\n            this.scene.remove(this.scene.children[0]);\n            if(this.scene.children[0] == THREE.Mesh){\n                this.scene.children[0].geometry.dispose();\n                this.scene.children[0].material.dispose();\n            }\n\n\n\n        };\n\n\n    }\n\n    private getRandom(min,max)\n    {\n        var num = Math.floor( ( Math.random() * ( ( max + 1 ) - min ) ) + min);\n        console.log(num);\n        return num;\n    }\n\n\n}\n\n"]}